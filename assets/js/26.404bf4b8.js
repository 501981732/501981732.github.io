(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{237:function(t,s,e){"use strict";e.r(s);var n=e(0),a=Object(n.a)({},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._m(5),t._v(" "),t._m(6),t._m(7),t._v(" "),t._m(8),t._v(" "),e("p",[t._v("随着前后端分离，以及web前端工程化的日益完善，逐渐出现一些css工程化的解决方案")]),t._v(" "),e("img",{attrs:{src:"http://raw.githubusercontent.com/501981732/my-vuepress/master/docs/.vuepress/public/img/css-transition.gif",width:"400",height:"150"}}),t._v(" "),e("img",{attrs:{src:"http://img0.tuicool.com/zauAbqY.gif",width:"400",height:"150"}}),t._v(" "),t._m(9),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),t._m(12),t._v(" "),t._m(13),t._v(" "),t._m(14),t._v(" "),t._m(15),t._m(16),t._v(" "),t._m(17),t._m(18),t._v(" "),t._m(19),t._m(20),t._v(" "),t._m(21),t._v(" "),t._m(22),t._v(" "),e("p",[t._v("####特点:\n逻辑处理能力强，可以优化项目结构，但是采用特殊语法，和预处理框架耦合度高")]),t._v(" "),t._m(23),t._v(" "),t._m(24),t._v(" "),e("p",[t._v("看一下上面预处理器是如何前缀的？分别写mixinx 然后再入引用。\n后处理器如何处理的？")]),t._v(" "),t._m(25),t._m(26),t._v(" "),t._m(27),t._v(" "),t._m(28),t._v(" "),e("p",[t._v("使用原生语法，更贴近未来标准，但是逻辑处理等方便偏弱")]),t._v(" "),e("img",{attrs:{src:"https://raw.githubusercontent.com/501981732/my-vuepress/master/docs/.vuepress/public/img/css1.png",width:"80%"}}),t._v(" "),t._m(29),t._v(" "),e("p",[t._v("前后通吃，既能实现预处理功能，又能处理后处理器做的事，而且功能不仅如此，采用插件系统，即插即用。")]),t._v(" "),e("p",[t._v("postcss让css 工作流变得更加清晰。")]),t._v(" "),e("p",[t._v("未来css工作流可能是 原生css未来标准 + postcss等 处理器。\n现在项目中流行的方式是 预处理+postcss结合使用。")]),t._v(" "),t._m(30),t._v(" "),t._m(31),t._v(" "),t._m(32),t._v(" "),e("p",[t._v("PostCSS是CSS变成JavaScript的数据，使它变成可操作。PostCSS是基于JavaScript插件，然后执行代码操作。PostCSS自身并不会改变CSS，它只是一种插件，为执行任何的转变铺平道路。")]),t._v(" "),t._m(33),t._v(" "),e("p",[t._v("PostCSS 接收一个 CSS 文件并提供了一个 API 来分析、修改它的规则（通过把 CSS 规则转换成一个抽象语法树的方式）。在这之后，这个 API 便可被许多插件利用来做有用的事情，比如寻错或自动添加 CSS vendor 前缀。\nPostCSS插件可以像预处理器，它们可以优化和autoprefix代码；可以添加未来语法；可以添加变量和逻辑；可以提供完整的网格系统；可以提供编码的快捷方式等等。")]),t._v(" "),e("p",[t._v("postCSS可以做很多，但是他自身又不会去做什么，你可以通过配置插件或者结合其他来完成你想要的效果。")]),t._v(" "),t._m(34),t._v(" "),e("p",[t._v("你可以在这里"),e("a",{attrs:{href:"https://github.com/postcss/postcss/blob/master/docs/plugins.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("list"),e("OutboundLink")],1),t._v("或者这里"),e("a",{attrs:{href:"https://www.postcss.parts/",target:"_blank",rel:"noopener noreferrer"}},[t._v("searchable catalog"),e("OutboundLink")],1),t._v("来查找 postcss的plugins。")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/postcss/postcss/blob/HEAD/README-cn.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("readme"),e("OutboundLink")],1)]),t._v(" "),t._m(35),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://github.com/postcss/postcss-use",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("postcss-use")]),e("OutboundLink")],1),t._v(" 允许你在 CSS 里明确地设置 PostCSS 插件，并且只在当前文件执行它们。")]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/outpunk/postcss-modules",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("postcss-modules")]),e("OutboundLink")],1),t._v(" 和 "),e("a",{attrs:{href:"https://github.com/gajus/react-css-modules",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("react-css-modules")]),e("OutboundLink")],1),t._v(" 可以自动以组件为单位隔绝 CSS 选择器。")]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/maximkoretskiy/postcss-autoreset",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("postcss-autoreset")]),e("OutboundLink")],1),t._v(" 是全局样式重置的又一个选择，它更适用于分离的组件。")]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/maximkoretskiy/postcss-initial",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("postcss-initial")]),e("OutboundLink")],1),t._v(" 添加了 "),e("code",[t._v("all: initial")]),t._v(" 的支持，重置了所有继承的样式。")]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/ausi/cq-prolyfill",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("cq-prolyfill")]),e("OutboundLink")],1),t._v(" 添加了容器查询的支持，允许添加响应于父元素宽度的样式.")])]),t._v(" "),t._m(36),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://github.com/postcss/autoprefixer",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("autoprefixer")]),e("OutboundLink")],1),t._v(" 添加了 vendor 浏览器前缀，它使用 Can I Use 上面的数据。")]),t._v(" "),t._m(37),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/jonathantneal/postcss-preset-env",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("postcss-preset-env")]),e("OutboundLink")],1),t._v(" Use tomorrow’s CSS syntax, today。")])]),t._v(" "),t._m(38),t._v(" "),e("ul",[t._m(39),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/hudochenkov/postcss-sorting",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("postcss-sorting")]),e("OutboundLink")],1),t._v(" 给规则的内容以及@规则排序。")]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/ismamz/postcss-utilities",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("postcss-utilities")]),e("OutboundLink")],1),t._v(" 囊括了最常用的简写方式和书写帮助。")]),t._v(" "),t._m(40)]),t._v(" "),t._m(41),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://github.com/assetsjs/postcss-assets",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("postcss-assets")]),e("OutboundLink")],1),t._v(" 可以插入图片尺寸和内联文件。")]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/2createStudio/postcss-sprites",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("postcss-sprites")]),e("OutboundLink")],1),t._v(" 能生成雪碧图。")]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/jonathantneal/postcss-font-magician",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("font-magician")]),e("OutboundLink")],1),t._v(" 生成所有在 CSS 里需要的 "),e("code",[t._v("@font-face")]),t._v(" 规则。")]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/TrySound/postcss-inline-svg",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("postcss-inline-svg")]),e("OutboundLink")],1),t._v(" 允许你内联 SVG 并定制它的样式。")]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/jonathantneal/postcss-write-svg",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("postcss-write-svg")]),e("OutboundLink")],1),t._v(" 允许你在 CSS 里写简单的 SVG。")])]),t._v(" "),t._m(42),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://github.com/stylelint/stylelint",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("stylelint")]),e("OutboundLink")],1),t._v(" 是一个模块化的样式提示器。")]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/morishitter/stylefmt",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("stylefmt")]),e("OutboundLink")],1),t._v(" 是一个能根据 "),e("code",[t._v("stylelint")]),t._v(" 规则自动优化 CSS 格式的工具。")]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/anandthakker/doiuse",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("doiuse")]),e("OutboundLink")],1),t._v(" 提示 CSS 的浏览器支持性，使用的数据来自于 Can I Use。")]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/SlexAxton/css-colorguard",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("colorguard")]),e("OutboundLink")],1),t._v(" 帮助你保持一个始终如一的调色板。")])]),t._v(" "),t._m(43),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://github.com/vkalinichev/postcss-rtl",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("postcss-rtl")]),e("OutboundLink")],1),t._v(" 在单个 CSS 文件里组合了两个方向（左到右，右到左）的样式。")]),t._v(" "),e("li",[e("a",{attrs:{href:"http://cssnano.co",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("cssnano")]),e("OutboundLink")],1),t._v(" 是一个模块化的 CSS 压缩器。")]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/peterramsing/lost",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("lost")]),e("OutboundLink")],1),t._v(" 是一个功能强大的 "),e("code",[t._v("calc()")]),t._v(" 栅格系统。")]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/MohammadYounes/rtlcss",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("rtlcss")]),e("OutboundLink")],1),t._v(" 镜像翻转 CSS 样式，适用于 right-to-left 的应用场景。")])]),t._v(" "),t._m(44),t._v(" "),e("p",[t._v("PostCSS 可以转化样式到任意语法，不仅仅是 CSS。\n如果还没有支持你最喜欢的语法，你可以编写一个解释器以及（或者）一个 stringifier 来拓展 PostCSS。")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://github.com/postcss/sugarss",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("sugarss")]),e("OutboundLink")],1),t._v(" 是一个以缩进为基础的语法，类似于 Sass 和 Stylus。")]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/gucong3000/postcss-syntax",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("postcss-syntax")]),e("OutboundLink")],1),t._v(" 通过文件扩展名自动切换语法。")]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/gucong3000/postcss-html",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("postcss-html")]),e("OutboundLink")],1),t._v(" 解析类 HTML 文件里"),e("code",[t._v("<style>")]),t._v("标签中的样式。")]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/gucong3000/postcss-markdown",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("postcss-markdown")]),e("OutboundLink")],1),t._v(" 解析 Markdown 文件里代码块中的样式。")]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/gucong3000/postcss-jsx",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("postcss-jsx")]),e("OutboundLink")],1),t._v(" 解析源文件里模板或对象字面量中的CSS。")]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/gucong3000/postcss-styled",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("postcss-styled")]),e("OutboundLink")],1),t._v(" 解析源文件里模板字面量中的CSS。")]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/postcss/postcss-scss",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("postcss-scss")]),e("OutboundLink")],1),t._v(" 允许你使用 SCSS "),e("em",[t._v("(但并没有将 SCSS 编译到 CSS)")]),t._v("。")]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/AleshaOleg/postcss-sass",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("postcss-sass")]),e("OutboundLink")],1),t._v(" 允许你使用 Sass "),e("em",[t._v("(但并没有将 Sass 编译到 CSS)")]),t._v("。")]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/webschik/postcss-less",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("postcss-less")]),e("OutboundLink")],1),t._v(" 允许你使用 Less "),e("em",[t._v("(但并没有将 LESS 编译到 CSS)")]),t._v("。")]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/Crunch/postcss-less",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("postcss-less-engine")]),e("OutboundLink")],1),t._v(" 允许你使用 Less "),e("em",[t._v("(并且使用真正的 Less.js 把 LESS 编译到 CSS)")]),t._v("。")]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/postcss/postcss-js",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("postcss-js")]),e("OutboundLink")],1),t._v(" 允许你在 JS 里编写样式，或者转换成 React 的内联样式／Radium／JSS。")]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/postcss/postcss-safe-parser",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("postcss-safe-parser")]),e("OutboundLink")],1),t._v(" 查找并修复 CSS 语法错误。")]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/ben-eb/midas",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("midas")]),e("OutboundLink")],1),t._v(" 将 CSS 字符串转化成高亮的 HTML。")])]),t._v(" "),t._m(45),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"http://julian.io/some-things-you-may-think-about-postcss-and-you-might-be-wrong",target:"_blank",rel:"noopener noreferrer"}},[t._v("一些你对 PostCSS 可能产生的误解"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"http://davidtheclark.com/its-time-for-everyone-to-learn-about-postcss",target:"_blank",rel:"noopener noreferrer"}},[t._v("PostCSS 究竟是什么，是做什么的"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"http://webdesign.tutsplus.com/series/postcss-deep-dive--cms-889",target:"_blank",rel:"noopener noreferrer"}},[t._v("PostCSS 指南"),e("OutboundLink")],1)])]),t._v(" "),e("p",[t._v("你可以在 "),e("a",{attrs:{href:"https://github.com/jjaderg/awesome-postcss",target:"_blank",rel:"noopener noreferrer"}},[t._v("awesome-postcss"),e("OutboundLink")],1),t._v(" 列表里找到更多优秀的文章和视频。")]),t._v(" "),t._m(46),t._v(" "),t._m(47),t._v(" "),t._m(48),t._v(" "),t._m(49),t._v(" "),t._m(50),t._v(" "),t._m(51),t._v(" "),t._m(52),t._v(" "),t._m(53),t._m(54),t._v(" "),t._m(55),t._v(" "),t._m(56),t._m(57),t._v(" "),t._m(58),t._v(" "),t._m(59),t._v(" "),t._m(60),t._v(" "),t._m(61),t._m(62),t._v(" "),t._m(63),t._v(" "),e("blockquote",[e("p",[t._v("主要用来压缩和清理CSS代码。 在webpack中 css-loader已经具有cssnano功能。你可以在postcss-loader里面显示的使用并配置。\ncssnano是一个非常强大的CSS优化的插件包，他汇聚了20几个"),e("a",{attrs:{href:"https://cssnano.co/guides/optimisations/",target:"_blank",rel:"noopener noreferrer"}},[t._v("插件"),e("OutboundLink")],1),t._v("，即插即用。你可能根据自己的需求进行配置，甚至是完全禁用。具体参数 见"),e("a",{attrs:{href:"http://cssnano.co/",target:"_blank",rel:"noopener noreferrer"}},[t._v("这里"),e("OutboundLink")],1)])]),t._v(" "),t._m(64),t._m(65),t._v(" "),e("blockquote",[e("p",[t._v("ccssnext。该插件可以让我们使用CSS未来的特性，其会对这些特性做相关的兼容性处理。BUT变化太TM快了，目前被不再维护 被"),e("a",{attrs:{href:"https://github.com/MoOx/postcss-cssnext",target:"_blank",rel:"noopener noreferrer"}},[t._v("postcss-preset-env"),e("OutboundLink")],1),t._v(" 取代\n"),e("a",{attrs:{href:"https://cssnext.io/features/#automatic-vendor-prefixes",target:"_blank",rel:"noopener noreferrer"}},[t._v("相关特性 变量 混入 逻辑等"),e("OutboundLink")],1)])]),t._v(" "),t._m(66),t._m(67),t._v(" "),e("blockquote",[e("p",[t._v("post-cssnext下一代 更加强大。"),e("a",{attrs:{href:"https://www.npmjs.com/package/postcss-preset-env",target:"_blank",rel:"noopener noreferrer"}},[t._v("资料"),e("OutboundLink")],1),t._v(" BUT假如你有用happypack去做webpack的性能优化的话，请使用post-cssnext。happypack有点“老了”根本配不上postcss-preset-env  2333~")])]),t._v(" "),t._m(68),t._m(69),t._v(" "),t._m(70),t._v(" "),e("p",[t._v("具体实现不多说，"),e("a",{attrs:{href:"https://github.com/amfe/lib-flexible",target:"_blank",rel:"noopener noreferrer"}},[t._v("flexable"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("strong",[t._v("方案1：")]),t._v(" 配合sublime插件 "),e("a",{attrs:{href:"https://github.com/flashlizi/cssrem",target:"_blank",rel:"noopener noreferrer"}},[t._v("cssrem"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("sublime配置插件")]),t._v(" "),t._m(71),e("img",{attrs:{src:"http://img0.tuicool.com/zauAbqY.gif",width:"400",height:"150"}}),t._v(" "),t._m(72),t._v(" "),t._m(73),e("p",[e("strong",[t._v("方案3：")]),t._v(" 也就是我们的主角，postcss插件，我常用的是"),e("a",{attrs:{href:"https://www.npmjs.com/package/postcss-pxtorem",target:"_blank",rel:"noopener noreferrer"}},[t._v("postcss-pxtorem"),e("OutboundLink")],1),t._v("(last publish：2 years ago)")]),t._v(" "),e("p",[t._v("当然还有其他相似插件"),e("a",{attrs:{href:"https://www.npmjs.com/package/postcss-px2rem",target:"_blank",rel:"noopener noreferrer"}},[t._v("postcss-px2rem"),e("OutboundLink")],1),t._v("(last publish：3 years ago)，两者都没有提供exclude")]),t._v(" "),e("p",[t._v("核心配置：")]),t._v(" "),t._m(74),e("p",[t._v("从此移动端我们就可以愉快的使用设计稿PX来搞啦~其他交给postcss来搞定。")]),t._v(" "),t._m(75),t._v(" "),e("p",[t._v("vw布局方案采用的是 "),e("a",{attrs:{href:"https://www.npmjs.com/package/postcss-px-to-viewport",target:"_blank",rel:"noopener noreferrer"}},[t._v("postcss-px-to-viewport"),e("OutboundLink")],1)]),t._v(" "),t._m(76),e("p",[t._v("从此移动端我们就可以愉快的使用设计稿PX来搞啦~")]),t._v(" "),t._m(77),t._v(" "),t._m(78),t._v(" "),t._m(79),t._v(" "),e("p",[t._v("css未来语法原来由于种种原因导致不敢用的，比如"),e("strong",[t._v("image-set")]),t._v("现在你可以撸起袖子干了\ncss-next升级版"),e("a",{attrs:{href:"https://preset-env.cssdb.org/features",target:"_blank",rel:"noopener noreferrer"}},[t._v("link"),e("OutboundLink")],1)]),t._v(" "),t._m(80),t._v(" "),t._m(81),t._v(" "),t._m(82),t._v(" "),e("img",{attrs:{src:"https://raw.githubusercontent.com/501981732/my-vuepress/master/docs/.vuepress/public/img/image_set_dpr2.jpeg",width:"50%"}}),t._v(" "),t._m(83),t._v(" "),e("img",{attrs:{src:"https://raw.githubusercontent.com/501981732/my-vuepress/master/docs/.vuepress/public/img/image_set_dpr3.jpeg",width:"50%"}}),t._v(" "),t._m(84),t._v(" "),t._m(85),t._m(86),t._v(" "),t._m(87),t._m(88),t._v(" "),t._m(89),t._m(90),t._v(" "),t._m(91),e("p",[e("a",{attrs:{href:"https://codepen.io/501981732/pen/QxKVqq",target:"_blank",rel:"noopener noreferrer"}},[t._v("摸我~"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("--")]),t._v(" "),e("p",[t._v("postcss强大的功能不止如此，总之当我们配置好postcss工作流之后，我们之后需要关注css就好了，剩下兼容，优化等问题，我们丢给postcss就好啦")]),t._v(" "),t._m(92),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/postcss/postcss/blob/master/docs/writing-a-plugin.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("相关"),e("OutboundLink")],1)])])},[function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"css-workflow"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#css-workflow","aria-hidden":"true"}},[this._v("#")]),this._v(" css workflow")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"历史"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#历史","aria-hidden":"true"}},[this._v("#")]),this._v(" 历史")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("上古时期：刀耕火种")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("最原始的预处理： 模板插入")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v(".container {\n    left: <%= left%>px;\n}\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("手写前缀")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v(".info {\n  -webkit-transition: width .3s;\n  -moz-transition: width .3s;\n  -ms-transition: width .3s;\n  -o-transition: width .3s;\n  transition: width .3s;//标准写法放最后\n}\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("工业革命")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("通过编辑器插件手动处理前缀")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("第二次工业革命")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("各种预处理器")]),this._v(" "),s("li",[this._v("后处理器")]),this._v(" "),s("li",[this._v("postcss")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"css-预处理器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#css-预处理器","aria-hidden":"true"}},[this._v("#")]),this._v(" css 预处理器")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("sass/scss")]),this._v(" "),s("li",[this._v("less")]),this._v(" "),s("li",[this._v("stylus")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"特性："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#特性：","aria-hidden":"true"}},[this._v("#")]),this._v(" 特性：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("variables")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("less\n@base: #f938ab;\nborder: 1px solid @base;\n\nsass\n$base: #F90;\nborder: 1px solid $base;\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("Nesting")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("#header {\n  color: black;\n  .navigation {\n    font-size: 12px;\n  }\n  .logo {\n    width: 300px;\n  }\n}\n//输出\n\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("Mixins")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("less\n.transition(value) {\n  -webkit-transition: value;\n     -moz-transition: value;\n       -o-transition: value;\n          transition: value;\n}\n.foo {\n  .transition(width .3s);\n}\n\nsass\n@mixin transition($value) {\n  -webkit-transition: $value;\n     -moz-transition: $value;\n       -o-transition: $value;\n          transition: $value;\n}\n.foo {\n  @include transition(width .3s);\n}\n")])])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ul",[e("li",[t._v("Operations")]),t._v(" "),e("li",[t._v("Functions")]),t._v(" "),e("li",[t._v("namespaces")]),t._v(" "),e("li",[t._v("scope")]),t._v(" "),e("li",[t._v("import")]),t._v(" "),e("li",[t._v("...")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"实现原理："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实现原理：","aria-hidden":"true"}},[this._v("#")]),this._v(" 实现原理：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("取到 DSL源代码的分析树")]),this._v(" "),s("li",[this._v("将含有动态生成相关节点的分析树转换为静态分析树")]),this._v(" "),s("li",[this._v("将静态分析树转换为CSS的静态分析树")]),this._v(" "),s("li",[this._v("将CSS的静态分析树转换为CSS 代码")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"css-后处理器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#css-后处理器","aria-hidden":"true"}},[this._v("#")]),this._v(" css 后处理器")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("压缩 clean-css")]),this._v(" "),s("li",[this._v("自动加前缀 AntoPrefixer")]),this._v(" "),s("li",[this._v("可攻可受的css Grace")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v(".foo {\n  transition: width .3s;\n}\n//根据你的Browserslist配置\n转换成\n.foo {\n  -webkit-transition:  width .3s;\n     -moz-transition:  width .3s;\n       -o-transition:  width .3s;\n          transition:  width .3s;\n}\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"实现原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实现原理","aria-hidden":"true"}},[this._v("#")]),this._v(" 实现原理:")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("将源代码做为CSS解析，获得分析树")]),this._v(" "),s("li",[this._v("对CSS的分析树进行后处理")]),this._v(" "),s("li",[this._v("将CSS的分析树转换为CSS代码")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"特点："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#特点：","aria-hidden":"true"}},[this._v("#")]),this._v(" 特点：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"postcss-前后通吃"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#postcss-前后通吃","aria-hidden":"true"}},[this._v("#")]),this._v(" postcss 前后通吃")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"postcss"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#postcss","aria-hidden":"true"}},[this._v("#")]),this._v(" postcss")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("PostCSS is a tool for transforming styles with JS plugins. These plugins can lint your CSS, support variables and mixins, transpile future CSS syntax, inline images, and more.")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"postcss是啥"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#postcss是啥","aria-hidden":"true"}},[this._v("#")]),this._v(" postcss是啥")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"postcss可以做啥"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#postcss可以做啥","aria-hidden":"true"}},[this._v("#")]),this._v(" postcss可以做啥")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("尽管表面上它看起来是一个预处理器，其实它不是一个预处理器"),s("br"),this._v("\n尽管表面上它看起来是一个后处理器，其实它也不是一个后处理器"),s("br"),this._v("\n尽管它可以促进、支持未来的语法，其实它不是未来语法"),s("br"),this._v("\n尽管它可以提供清理、优化代码这样的功能，其实它不是清理、优化代码的工具"),s("br"),this._v("\n它不是任何一件事情，这也意味者它潜力无限，你可以根据自己的需要配置你需要的功能")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"解决全局-css-的问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解决全局-css-的问题","aria-hidden":"true"}},[this._v("#")]),this._v(" 解决全局 CSS 的问题")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"提前使用先进的-css-特性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#提前使用先进的-css-特性","aria-hidden":"true"}},[this._v("#")]),this._v(" 提前使用先进的 CSS 特性")])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[this._v("["),s("code",[this._v("css-next")]),this._v("] Use tomorrow’s CSS syntax, today。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"更佳的-css-可读性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#更佳的-css-可读性","aria-hidden":"true"}},[this._v("#")]),this._v(" 更佳的 CSS 可读性")])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[this._v("["),s("code",[this._v("precss")]),this._v("] 囊括了许多插件来支持类似 Sass 的特性，比如 CSS 变量，套嵌，mixins 等。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[this._v("["),s("code",[this._v("short")]),this._v("] 添加并拓展了大量的缩写属性。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"图片和字体"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#图片和字体","aria-hidden":"true"}},[this._v("#")]),this._v(" 图片和字体")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"提示器（linters）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#提示器（linters）","aria-hidden":"true"}},[this._v("#")]),this._v(" 提示器（Linters）")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"其它"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#其它","aria-hidden":"true"}},[this._v("#")]),this._v(" 其它")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#语法","aria-hidden":"true"}},[this._v("#")]),this._v(" 语法")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"文章"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文章","aria-hidden":"true"}},[this._v("#")]),this._v(" 文章")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用","aria-hidden":"true"}},[this._v("#")]),this._v(" 使用")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("每个项目遇到的场景都是不一样，这里会介绍集中常用的插件的使用，通过这几些来了解下postcss的强大之处")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",[s("li",[this._v("在你的构建工具中找到postcss对应的扩展并添加。")]),this._v(" "),s("li",[this._v("查找你所需要的postcss插件 添加到postcss处理队列中。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("你可以使用webpack gulp fis 或者直接CLI来使用，鉴于前端现在大多用的webpack,我们后面介绍的集中都是基于webpack的,我们的webpack已经有太多东西来处理了，所以postcss我们会单独放到一个文件来做配置 "),s("strong",[this._v(".postcssrc.js")]),this._v(" 或者 "),s("strong",[this._v("postcss.config.js")]),this._v("（当然你可以命名其他名字，然后修改path，一般我们不会修改）")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"postcss-loader"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#postcss-loader","aria-hidden":"true"}},[this._v("#")]),this._v(" postcss-loader")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("首先是 "),s("strong",[this._v("postcss-loader")]),this._v(" 你需要把post-cssloader加入到你的webpack中去,一般我们不会单独使用，而是结合css-loader style-loader等，注意："),s("strong",[this._v("你需要把它放到style-loader css-loader后面，但是要放到一些预处理loader less-loader sass-loader前面(loader加载顺序从右往左)")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("npm install postcss-loader")])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{attrs:{class:"token comment"}},[t._v("//webpack.config.js")]),t._v("\nmodule"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  module"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    rules"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n      "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        test"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token regex"}},[t._v("/\\.css$/")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        use"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n          "),e("span",{attrs:{class:"token string"}},[t._v("'style-loader'")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" loader"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v("'css-loader'")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" importLoaders"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token number"}},[t._v("1")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          "),e("span",{attrs:{class:"token string"}},[t._v("'postcss-loader'")]),t._v("\n        "),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n      "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{attrs:{class:"token comment"}},[t._v("// postcss.config.js")]),t._v("\n"),e("span",{attrs:{class:"token comment"}},[t._v("// 一般配置文件我们只需要关注plugins就好啦，当然还有其他配置项")]),t._v("\n"),e("span",{attrs:{class:"token comment"}},[t._v("// https://github.com/michael-ciniawsky/postcss-load-config")]),t._v("\nmodule"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    plugins"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{attrs:{class:"token string"}},[t._v('"postcss-import"')]),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n        "),e("span",{attrs:{class:"token string"}},[t._v('"postcss-url"')]),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n        "),e("span",{attrs:{class:"token string"}},[t._v('"autoprefixer"')]),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"postcss-import"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#postcss-import","aria-hidden":"true"}},[this._v("#")]),this._v(" postcss-import")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("主要是解决@import引入路径问题。使用这个插件，可以让你很轻易的使用本地文件、node_modules或者web_modules的文件。这个插件配合postcss-url让你引入文件变得更轻松。")])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-css extra-class"},[e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[t._v("//xx.css\n"),e("span",{attrs:{class:"token atrule"}},[e("span",{attrs:{class:"token rule"}},[t._v("@import")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v('"normalize.css"')]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")])]),t._v(" "),e("span",{attrs:{class:"token comment"}},[t._v('/* == @import "../node_modules/normalize.css/normalize.css"; */')]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"postcss-url"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#postcss-url","aria-hidden":"true"}},[this._v("#")]),this._v(" postcss-url")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("该插件主要用来处理文件，比如图片文件、字体文件等引用路径的处理。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"autoprefixer"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#autoprefixer","aria-hidden":"true"}},[this._v("#")]),this._v(" autoprefixer")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("自动添加浏览器厂商的私有前缀，它使用 Can I Use 上面的数据。当然你可以根据项目需要，做相应浏览器的兼容，你可以创建 "),s("strong",[this._v(".browserslistrc")]),this._v(" 或者我们更常用的办法是在package.json的 browserslist字段添加。其他工具比如 "),s("strong",[this._v("babel-preset-env stylelint")]),this._v("等都可以共享此浏览器配置。")])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("    "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{attrs:{class:"token string"}},[t._v('"browserslist"')]),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n            "),e("span",{attrs:{class:"token string"}},[t._v('"> 1%"')]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),e("span",{attrs:{class:"token string"}},[t._v('"last 2 versions"')]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),e("span",{attrs:{class:"token string"}},[t._v('"not ie <= 8"')]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),e("span",{attrs:{class:"token string"}},[t._v('"iOS >= 7"')]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),e("span",{attrs:{class:"token string"}},[t._v('"Firefox >= 20"')]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),e("span",{attrs:{class:"token string"}},[t._v('"Android > 3.2"')]),t._v("\n        "),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("还需要注意的一点是由于autoprefixer是css常见的需求，所以很多插件其实已经内置了此功能，比如 "),s("strong",[this._v("postcss-cssnext postcss-nano postcss-preset-dev")]),this._v("。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"cssnano"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cssnano","aria-hidden":"true"}},[this._v("#")]),this._v(" cssnano")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v('  plugins: {\n    cssnano: {\n      preset: "advanced", //cssnano-preset-advanced\n      autoprefixer: false, //比如你已经单独使用了autoprefixer 或者使用了postcss-cssnext等具备autoprefixer功能的plugin\n      "postcss-zindex": false  //这里面有坑，他会重新计算页面的z-index,假如你在其他组件里面有设置z-index,会失效。\n    }\n  }\n')])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"未来语法之：postcss-cssnext"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#未来语法之：postcss-cssnext","aria-hidden":"true"}},[this._v("#")]),this._v(" 未来语法之：postcss-cssnext")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("  plugins: {\n    'postcss-cssnext': {},\n  }\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"未来语法之：postcss-preset-env"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#未来语法之：postcss-preset-env","aria-hidden":"true"}},[this._v("#")]),this._v(" 未来语法之：postcss-preset-env")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("  plugins: {\n    'postcss-preset-env': {},\n  }\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"rem布局方案"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rem布局方案","aria-hidden":"true"}},[this._v("#")]),this._v(" REM布局方案")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("移动端现在流行的rem布局，我们可以通过 postcss插件来做自动配置。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v('{\n    "px_to_rem": 75,\n    "max_rem_fraction_length": 6,\n    "available_file_types": [".css", ".less", ".sass",".vue"]\n}\n')])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("方案2:")]),this._v(" 利用sass等预处理工具，编写pxTorem function等")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-css extra-class"},[e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[t._v("//css\n$"),e("span",{attrs:{class:"token property"}},[t._v("brower_default_font_size")]),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 16px !default"),e("span",{attrs:{class:"token selector"}},[t._v(";\nhtml")]),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{attrs:{class:"token property"}},[t._v("font-size")]),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $brower_default_font_size"),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{attrs:{class:"token atrule"}},[e("span",{attrs:{class:"token rule"}},[t._v("@function")]),t._v(" "),e("span",{attrs:{class:"token function"}},[t._v("pxTorem")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("$px"),e("span",{attrs:{class:"token punctuation"}},[t._v(")")])]),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{attrs:{class:"token atrule"}},[e("span",{attrs:{class:"token rule"}},[t._v("@return")]),t._v(" $px / $brower_default_font_size * 1rem"),e("span",{attrs:{class:"token punctuation"}},[t._v(";")])]),t._v("\n"),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{attrs:{class:"token selector"}},[t._v("container")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{attrs:{class:"token property"}},[t._v("width")]),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token function"}},[t._v("pxTorem")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("200px"),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("postcss"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("config"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("js\nmodule"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    plugins"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{attrs:{class:"token string"}},[t._v('"postcss-pxtorem"')]),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            rootValue"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token number"}},[t._v("75")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            unitPrecision"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token number"}},[t._v("5")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            propList"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{attrs:{class:"token string"}},[t._v("'*'")]),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            selectorBlackList"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            replace"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token boolean"}},[t._v("true")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            mediaQuery"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token boolean"}},[t._v("false")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            minPixelValue"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token number"}},[t._v("12")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"vw布局方案"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vw布局方案","aria-hidden":"true"}},[this._v("#")]),this._v(" vw布局方案")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("module"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  plugins"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{attrs:{class:"token string"}},[t._v('"postcss-px-to-viewport"')]),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      viewportWidth"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token number"}},[t._v("750")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{attrs:{class:"token comment"}},[t._v("//视窗的宽度，对应的是我们设计稿的宽度，一般是750")]),t._v("\n      viewportHeight"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token number"}},[t._v("1334")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{attrs:{class:"token comment"}},[t._v("// 视窗的高度，根据750设备的宽度来指定，一般指定1334，也可以不配置")]),t._v("\n      unitPrecision"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token number"}},[t._v("3")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{attrs:{class:"token comment"}},[t._v("// 指定`px`转换为视窗单位值的小数位数（很多时候无法整除）")]),t._v("\n      viewportUnit"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v('"vw"')]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{attrs:{class:"token comment"}},[t._v("// 指定需要转换成的视窗单位，建议使用vw")]),t._v("\n      selectorBlackList"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{attrs:{class:"token string"}},[t._v('".ignore"')]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v('".hairlines"')]),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{attrs:{class:"token comment"}},[t._v("// 指定不转换为视窗单位的类，可以自定义，可以无限添加,建议定义一至两个通用的类名")]),t._v("\n      minPixelValue"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token number"}},[t._v("1")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{attrs:{class:"token comment"}},[t._v("// 小于或等于`1px`不转换为视窗单位，你也可以设置为你想要的值")]),t._v("\n      mediaQuery"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token boolean"}},[t._v("false")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{attrs:{class:"token comment"}},[t._v("// 是否允许在媒体查询中转换`px`")]),t._v("\n      exclude"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{attrs:{class:"token regex"}},[t._v("/node_modules/i")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{attrs:{class:"token comment"}},[t._v("//排除第三方库")]),t._v("\n    "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"其他"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#其他","aria-hidden":"true"}},[this._v("#")]),this._v(" 其他")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ul",[e("li",[t._v("preCSS预处理器 和sass类似 拥有变量，嵌套，循环，混入等功能")]),t._v(" "),e("li",[t._v("postcss-sprites  生成雪碧图")]),t._v(" "),e("li",[t._v("postcss-svgo 给内联SVG做优化")]),t._v(" "),e("li",[t._v("postcss-modules css modules...")]),t._v(" "),e("li",[t._v("CSS Grace 修复IE各种bug,兼容旧浏览器的各种 Hack，让你无需担忧兼容性 包括IE6！")]),t._v(" "),e("li",[t._v("postcss-simple-vars  实现sass类变量")]),t._v(" "),e("li",[t._v("postcss-mixins [you must set this plugin before postcss-simple-vars and postcss-nested]")]),t._v(" "),e("li",[t._v("postcss-nested 嵌套")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"聊一聊-postcss-preset-env"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#聊一聊-postcss-preset-env","aria-hidden":"true"}},[this._v("#")]),this._v(" 聊一聊 postcss-preset-env")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("image-set兼容性")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"http://raw.githubusercontent.com/501981732/my-vuepress/master/docs/.vuepress/public/img/image_set.png",alt:"avatar"}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("转换后 dpr2下")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("转换后 dpr3下")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[s("p",[this._v("stage0")]),this._v(" "),s("p",[s("strong",[this._v("嵌套")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("article {\n  & p {\n    color: #333;\n  }\n}\n\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[s("p",[this._v("stage1")]),this._v(" "),s("p",[s("strong",[this._v("自定义media queries")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("custom media queries\n@custom-media --narrow-window (max-width: 30em);\n\n@media (--narrow-window) {}\n\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[s("p",[this._v("stage2")]),this._v(" "),s("p",[s("strong",[this._v("可以根据用户设备的分辨率匹配合适的图像")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v('可以根据用户设备的分辨率匹配合适的图像\np {\n  background-image: image-set(\n    "foo.png" 1x,\n    "foo-2x.png" 2x,\n    "foo-print.png" 600dpi\n  );\n}\n\n')])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[s("p",[this._v("stage3")]),this._v(" "),s("p",[s("strong",[this._v("自定义属性")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("custom properties\nimg {\n  --some-length: 32px;\n  height: var(--some-length);\n}\n---\x3e 转换为\nimg {\n  height: 32px;\n  height: var(--some-length);\n}\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"开发-postcss插件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#开发-postcss插件","aria-hidden":"true"}},[this._v("#")]),this._v(" 开发 PostCSS插件")])}],!1,null,null,null);a.options.__file="postcss了解下~.md";s.default=a.exports}}]);