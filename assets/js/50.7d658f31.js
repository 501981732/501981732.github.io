(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{243:function(t,e,n){"use strict";n.r(e);var i=n(0),a=Object(i.a)({},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),n("p",[t._v("目前实现动画的方式：")]),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/28536964",target:"_blank",rel:"noopener noreferrer"}},[t._v("创造react动画5种方案"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("a",{attrs:{href:"https://tech.youzan.com/react-animations/",target:"_blank",rel:"noopener noreferrer"}},[t._v("React 中常见的动画实现方式\n"),n("OutboundLink")],1)]),t._v(" "),n("li",[t._v("react-smooth")]),t._v(" "),n("li",[n("a",{attrs:{href:"http://azazdeaz.github.io/react-gsap-enhancer/#/demo/using-transition-group?_k=n0lcbb",target:"_blank",rel:"noopener noreferrer"}},[t._v("react-gsap-enhancer"),n("OutboundLink")],1)])]),t._v(" "),t._m(7),t._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://greensock.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("GSAP"),n("OutboundLink")],1),t._v("最炫酷的免费动画库之一")]),t._v(" "),n("li",[t._v("Velocity 简单易用、高性能、功能丰富的轻量级JS动画库")]),t._v(" "),n("li",[t._v("animation.css")]),t._v(" "),n("li",[n("a",{attrs:{href:"https://popmotion.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("popmotion"),n("OutboundLink")],1),t._v(" 该库还具有指针跟踪，弹簧物理，3D动画等功能，并可用于创建功能型，反应型的动画。")]),t._v(" "),n("li",[n("a",{attrs:{href:"http://bouncejs.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("弹性动效库bounce.js"),n("OutboundLink")],1)]),t._v(" "),t._m(8),t._v(" "),n("li",[n("router-link",{attrs:{to:"./scroll-out.github.io/"}},[t._v("scrollOut")])],1),t._v(" "),n("li",[n("a",{attrs:{href:"http://scrollmagic.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("scrollMagic"),n("OutboundLink")],1)])]),t._v(" "),n("p",[t._v("针对特定特效，我们入手手写的话，想想都想死....，借助现有轮子的话，我们需要考察各种轮子实现方案的可能性，兼容性，性能，包大小等等方面，但是时间有限，我们需要一种简单高效高性能的动画解决方案--lottie-web")]),t._v(" "),t._m(9),t._v(" "),n("p",[t._v("介绍：\n"),n("a",{attrs:{href:"http://airbnb.io/lottie/#/",target:"_blank",rel:"noopener noreferrer"}},[t._v("lottie"),n("OutboundLink")],1),t._v("是airbnb开源的一款可以解析使用AE制作的动画（需要用bodymovin导出为json格式）的库，支持web、ios、android和react native。在web端，lottie-web库可以解析导出的动画json文件，并将其以svg/canvas/HTML的方式将动画绘制到我们页面中。")]),t._v(" "),t._m(10),t._v(" "),n("p",[t._v("可靠性：")]),t._v(" "),t._m(11),t._v(" "),n("p",[t._v("优点：")]),t._v(" "),t._m(12),t._v(" "),n("p",[t._v("缺点")]),t._v(" "),t._m(13),t._v(" "),t._m(14),t._v(" "),t._m(15),t._v(" "),t._m(16),t._v(" "),t._m(17),t._v(" "),t._m(18),t._m(19),t._v(" "),t._m(20),t._m(21),t._v(" "),t._m(22),t._v(" "),n("p",[t._v("Lottie使用的前提是使用bodymovin插件将AE导出json")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://exchange.adobe.com/creativecloud.details.12557.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("bodymovin"),n("OutboundLink")],1),t._v("的主要功能是将 AE 导出的动画在 Web 端执行，而Lottie的主要作用是将动画在移动端运行。")]),t._v(" "),n("p",[t._v("1.下载地址: https://github.com/bodymovin/bodymovin/releases")]),t._v(" "),n("p",[t._v("2.安装 ZXP Installer ( mac下需要注意将ZXP Installer 放到应用程序中才能生效 )")]),t._v(" "),n("p",[t._v("3.解压后找到 build/extension/中的bodymovin.zxp 拖拽到ZXP Installer中安装，成功后打开AE，勾选 首选项／常规／允许脚本写入文件和访问网络。")]),t._v(" "),n("p",[t._v("4.在AE／窗口／扩展中打开bodymovin，在bodymovin面板中设置好导出目录，然后点击Render按钮一键导出json文件以及相关的图片。")]),t._v(" "),t._m(23),t._v(" "),n("p",[t._v("lottile的web端使用ts来包装的 我们可以结合ts声明文件可以很容易就了解其用法")]),t._v(" "),t._m(24),t._m(25),t._m(26),t._v(" "),n("p",[n("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/38140917",target:"_blank",rel:"noopener noreferrer"}},[t._v("Lottie原理与源码解析\n"),n("OutboundLink")],1),t._v(" "),n("a",{attrs:{href:"https://imweb.io/topic/5b2b129e61340cbe5576ca44",target:"_blank",rel:"noopener noreferrer"}},[t._v("源码分析——svg渲染"),n("OutboundLink")],1),t._v("\n在Adobe After Effects中，动画是由一个一个的图层组成的，在相应的图层上面添加一些变换(例如：缩放、移动等)，这变成为了动画。")]),t._v(" "),n("p",[t._v("bodymovin插件将AE转为JSON")]),t._v(" "),t._m(27),n("p",[t._v("layers是个数组，每一项对应AE稿中的图层，每个图层都有对应的相关参数，变换 内容 自图层等")]),t._v(" "),n("p",[t._v("在lottie-web中，会根据上面的json，进行相应的渲染处理:")]),t._v(" "),t._m(28),t._v(" "),t._m(29),t._v(" "),n("p",[t._v("js文件及json文件加载方案的考量")]),t._v(" "),t._m(30),t._v(" "),t._m(31),t._v(" "),n("p",[t._v("AE制作相关：")]),t._v(" "),t._m(32),t._v(" "),n("p",[t._v("很漂亮的微动效 https://codepen.io/collection/nVYWZR/?cursor=ZD0wJm89MSZwPTEmdj03MTc3MDk=\nhttps://imweb.io/topic/5b23a745d4c96b9b1b4c4efc\nhttp://dopro.io/animation-solution-lottie.html")])])},[function(){var t=this.$createElement,e=this._self._c||t;return e("pre",[e("code",[this._v("[lottie](https://github.com/airbnb/lottie) Lottie is a library for Android, iOS, Web, and Windows that parses Adobe After Effects animations exported as json with Bodymovin and renders them natively on mobile and on the web!\n")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"http://airbnb.io/lottie/images/Introduction_00_sm.gif",alt:"image"}}),this._v(" "),e("img",{attrs:{src:"http://airbnb.io/lottie/images/Introduction_01_sm.gif",alt:"image"}}),this._v(" "),e("img",{attrs:{src:"http://airbnb.io/lottie/images/Introduction_02_sm.gif",alt:"image"}}),this._v(" "),e("img",{attrs:{src:"http://airbnb.io/lottie/images/Introduction_03_sm.gif",alt:"image"}}),this._v(" "),e("img",{attrs:{src:"http://airbnb.io/lottie/images/Introduction_04_sm.gif",alt:"image"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"http://dopro.io/wp-content/uploads/2018/03/1492352322_94_w100_h100.gif",alt:"image"}}),this._v(" "),e("img",{attrs:{src:"http://dopro.io/wp-content/uploads/2018/03/1492352309_84_w100_h100.gif",alt:"image"}}),this._v(" "),e("img",{attrs:{src:"http://dopro.io/wp-content/uploads/2018/03/1492352298_12_w100_h100.gif",alt:"image"}}),this._v(" "),e("img",{attrs:{src:"http://dopro.io/wp-content/uploads/2018/03/1492352289_22_w100_h100.gif",alt:"image"}}),this._v(" "),e("img",{attrs:{src:"http://dopro.io/wp-content/uploads/2018/03/1492352258_8_w100_h100.gif",alt:"image"}}),this._v(" "),e("img",{attrs:{src:"http://dopro.io/wp-content/uploads/2018/03/1492352331_50_w100_h100.gif",alt:"image"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"需求背景"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#需求背景","aria-hidden":"true"}},[this._v("#")]),this._v(" 需求背景")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("58HRG雇主品牌盛典")]),this._v("自2016年首届开始，已成功举办三届，并在行业内形成了巨大影响力。在成功评选出行业内在口碑、员工满意度、美誉度各方面突出的企业外，58招聘也协同入围企业共同在品牌认可度提升、行业影响力等方面相互促进...目前每年都需要重做一版，而且历届品牌盛典项目的风格都是动画比较酷炫的，提高用户体验，but...开发时间有限，每次都需要和UI小姐姐讨论效果以及考察实现方案的可行性。")])},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ul",[n("li",[t._v("css3 逐帧动画/补间动画")]),t._v(" "),n("li",[t._v("gif 太大")]),t._v(" "),n("li",[t._v("前端实现svg动画 成本较高")]),t._v(" "),n("li",[t._v("canvas")]),t._v(" "),n("li",[n("ul",[n("li",[t._v("RAF FLIP")])])]),t._v(" "),n("li",[t._v("WebGL: 3D框架 THREE.JS ThingJS(针对物联网领域)")]),t._v(" "),n("li",[t._v("其他轮子 比如：")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("em",[this._v("React动画")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("em",[this._v("动画库")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[this._v("https://blog.csdn.net/weixin_34409703/article/details/91369180\n"),e("em",[this._v("滚动相关动画库")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"lottie"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lottie","aria-hidden":"true"}},[this._v("#")]),this._v(" lottie")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"//pic1.58cdn.com.cn/nowater/cxnomark/n_v2f08c7cf85632463d963a31624e220aca.png",alt:"image"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("目前star数（2019-19-18）lottie-web18185 fork数1703 usedby 1766，")]),this._v(" "),e("li",[this._v("最新三天前更新，开发中持续维护中")]),this._v(" "),e("li",[this._v("目前腾讯系 QQ音乐 腾讯课堂等很多部门都有应用")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("设计师实现动画 效果更好，且分工明确，设计师设计效果，FE实现")]),this._v(" "),e("li",[this._v("快！ 设计师AE稿利用Bodymovin插件导出JSON，开发人员只需要低啊用即可，大大减少工作量")]),this._v(" "),e("li",[this._v("小！相比gif等json文件小很多，性能也会好")]),this._v(" "),e("li",[this._v("几乎100%还原")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("lottie-web本身较大，但是web端可以通过本身的缓存机制提高加载性能，并且现在有light版本，如果只是在web端使用，建议统一渲染成统一格式(svg/canvas/html)，会有单独对应的light版本")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"//pic1.58cdn.com.cn/nowater/cxnomark/n_v2c91ec20cb96a4cfbae23acb091321ddc.png\n",height:"300"}})])},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ul",[n("li",[t._v("lottie_html.min.js")]),t._v(" "),n("li",[t._v("lottie_light_html.min.js")]),t._v(" "),n("li",[t._v("lottie_svg.min.js")]),t._v(" "),n("li",[t._v("lottie_light_svg.min.js")]),t._v(" "),n("li",[t._v("lottie_canvas.min.js")]),t._v(" "),n("li",[t._v("lottie_light_sanvas.min.js")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"引入方式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#引入方式","aria-hidden":"true"}},[this._v("#")]),this._v(" 引入方式")])},function(){var t=this.$createElement,e=this._self._c||t;return e("pre",[e("code",[this._v("npm install lottie-web\n")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("import lottie from 'lottie-web'\n\nlottie.loadAnimation({\n  container: element, \n  renderer: 'svg',\n  loop: true,\n  autoplay: true,\n  path: 'data.json' \n});\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("pre",[e("code",[this._v("cdn外链版则是bodymovin.js https://cdnjs.com/libraries/bodymovin 挑选需要的版本\n")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("bodymovin.loadAnimation({\n  container: element,  \n  renderer: 'svg', //canvas/html\n  loop: true,\n  autoplay: true,\n  path: 'data.json' \n});\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"useage"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#useage","aria-hidden":"true"}},[this._v("#")]),this._v(" useage")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{attrs:{id:"bodymovin插件安装使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bodymovin插件安装使用","aria-hidden":"true"}},[this._v("#")]),this._v(" bodymovin插件安装使用")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{attrs:{id:"lottile使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lottile使用","aria-hidden":"true"}},[this._v("#")]),this._v(" lottile使用")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("export type AnimationDirection = 1 | -1;//播放方向\nexport type AnimationSegment = [number, number];\nexport type AnimationEventName = 'enterFrame' | 'loopComplete' | 'complete' | 'segmentStart' | 'destroy' | 'config_ready' | 'data_ready' | 'DOMLoaded' | 'error';\nexport type AnimationEventCallback<T = any> = (args: T) => void;\n\nexport type AnimationItem = {\n    play(): void;//播放动画\n    stop(): void;//停止动画\n    pause(): void;//暂停动画\n    resize(): void; \n    setLocationHref(href: string): void;\n    setSpeed(speed: number): void;\n    goToAndPlay(value: number, isFrame?: boolean): void; //跳到某一帧动画，并播放\n    goToAndStop(value: number, isFrame?: boolean): void; //跳到某一帧动画，并停止\n    setDirection(direction: AnimationDirection): void;//方向\n    playSegments(segments: AnimationSegment | AnimationSegment[], forceFlag?: boolean): void;\n    setSubframe(useSubFrames: boolean): void;\n    destroy(): void;\n    getDuration(inFrames?: boolean): number;\n    triggerEvent<T = any>(name: AnimationEventName, args: T): void; //触发事件 AnimationEventName\n    addEventListener<T = any>(name: AnimationEventName, callback: AnimationEventCallback<T>): void;//监听事件\n    removeEventListener<T = any>(name: AnimationEventName, callback: AnimationEventCallback<T>): void;//移除\n}\n\nexport type BaseRendererConfig = {\n    imagePreserveAspectRatio?: string;\n    className?: string;\n};\n\nexport type SVGRendererConfig = BaseRendererConfig & {\n    title?: string;\n    description?: string;\n    preserveAspectRatio?: string;\n    progressiveLoad?: boolean;\n    hideOnTransparent?: boolean;\n    viewBoxOnly?: boolean;\n    viewBoxSize?: string;\n    focusable?: boolean;\n};\n\nexport type CanvasRendererConfig = BaseRendererConfig & {\n    clearCanvas?: boolean;\n    context?: CanvasRenderingContext2D;\n    progressiveLoad?: boolean;\n    preserveAspectRatio?: string;\n};\n\nexport type HTMLRendererConfig = BaseRendererConfig & {\n    hideOnTransparent?: boolean;\n};\n\nexport type AnimationConfig = {\n    container: Element;//挂载dom\n    renderer?: 'svg' | 'canvas' | 'html';//渲染类型\n    loop?: boolean | number;//是否循环\n    autoplay?: boolean;//是否自动播放\n    name?: string;//名字\n    rendererSettings?: SVGRendererConfig | CanvasRendererConfig | HTMLRendererConfig;\n}\n\nexport type AnimationConfigWithPath = AnimationConfig & {\n    path?: string;// path设置\n}\n\nexport type AnimationConfigWithData = AnimationConfig & {\n    animationData?: any; //data设置\n}\n\ntype LottiePlayer = {\n    play(name?: string): void; //播放动画\n    stop(name?: string): void; //停止播放动画\n    setSpeed(speed: number, name?: string): void;//设置播放速度\n    setDirection(direction: AnimationDirection, name?: string): void; // 设置播放方向\n    searchAnimations(animationData?: any, standalone?: boolean, renderer?: string): void;\n    loadAnimation(params: AnimationConfigWithPath | AnimationConfigWithData): AnimationItem;//加载动画，并返回一个 AnimationItem类型\n    destroy(name?: string): void;//销毁\n    registerAnimation(element: Element, animationData?: any): void; //注册动画\n    setQuality(quality: string | number): void;\n};\n\ndeclare const Lottie: LottiePlayer;\n\nexport default Lottie;\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("\nlet item:AnimationItem = lottie.loadAnimation({\n  container: element, // the dom element that will contain the animation\n  renderer: 'svg',\n  loop: true,\n  autoplay: true,\n  path: 'data.json' // the path to the animation json\n});\n\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{attrs:{id:"原理简介"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#原理简介","aria-hidden":"true"}},[this._v("#")]),this._v(" 原理简介")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('{\n    "fr": 30, // 帧率\n    "ip": 0, // 起始关键帧\n    "op": 20, // 结束关键帧\n    "w": 150, // 视图宽\n    "h": 130, // 视图高\n    "assets": [], // 资源集合 \n    "layers": [{ // 图层\n        "ty": 0, // 图层类型。\n        "refId": "comp_0", // 引用的资源，图片/预合成层\n        "ks": {}, // 变换。对应AE中的变换设置，下面有详细介绍\n        layer: [], // 该图层包含的子图层\n        shapes: [], // 形状图层\n        "w": 1334,\n        "h": 750,\n        "bm": 0\n    }], // 图层集合\n    "masker": [] // 蒙层集合\n}\n\n')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("shapes中会有各种形状，lottie-web会根据其参数，渲染出相应的svg标签；")]),this._v(" "),e("li",[this._v("ks中会有变换参数，lottie-web会将其转换成相应的trasform属性，添加到对应svg标签上；")]),this._v(" "),e("li",[this._v("ks的变换参数可能随时间变换，lottie-web会根据参数，调用window.requestAnimationFrame方法，对transform属性进行动态更新，实现动画。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"实际应用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#实际应用","aria-hidden":"true"}},[this._v("#")]),this._v(" 实际应用")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("我们不希望json文件打包到工程中，1是因为会引起最后的包的大小，2方便替换图像")]),this._v(" "),e("li",[this._v("建议外链引入 lottie，并统一项目渲染格式，使用最轻对应版本")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#问题","aria-hidden":"true"}},[this._v("#")]),this._v(" 问题")])},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ul",[n("li",[n("p",[t._v("将对应图层命名为#Id格式或.class格式，最终挂载后我们可以通过dom获取对应元素")])]),t._v(" "),n("li",[n("p",[t._v("不支持路径合成，把一些合成的路径关闭")])]),t._v(" "),n("li",[n("p",[t._v("尽量不使用预合成图层，需要将预合成中的所有图层都复制到主面板中，否则预合成中的动画可能会丢失")])]),t._v(" "),n("li",[n("p",[t._v("文字显示问题 lottie对文本支持不好，若出现此问题，可用AI导入")])]),t._v(" "),n("li",[n("p",[t._v("目前Lottie-ios还不支持的After Effects 特性")]),t._v(" "),n("ul",[n("li",[t._v("形状图层填充规则（奇偶/非零缠绕）")]),t._v(" "),n("li",[t._v("合并形状")]),t._v(" "),n("li",[t._v("裁切路径中的个别裁切形状功能")]),t._v(" "),n("li",[t._v("表达式")]),t._v(" "),n("li",[t._v("3D图层")]),t._v(" "),n("li",[t._v("图层样式渐变")]),t._v(" "),n("li",[t._v("多边形形状")]),t._v(" "),n("li",[t._v("反相Alpha蒙板")])])]),t._v(" "),n("li",[n("p",[t._v("json文件相关：")]),t._v(" "),n("ul",[n("li",[t._v("尽量减小图层，图层数量会直接影响json大小")]),t._v(" "),n("li",[t._v("奖励所有图层都是AE中的，其他软件如AI等导入的可能会导致json变大")]),t._v(" "),n("li",[t._v("可能会有些东西不支持\n其他：")])])]),t._v(" "),n("li",[n("p",[t._v("若是全屏动画，可能会导致浏览器没有全部遮罩，留白边，建议全屏动画用div包裹一层，自己盖一层蒙层")])]),t._v(" "),n("li")])}],!1,null,null,null);a.options.__file="秒做动画.md";e.default=a.exports}}]);