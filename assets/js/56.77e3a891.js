(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{267:function(t,s,n){"use strict";n.r(s);var a=n(0),e=Object(a.a)({},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),n("ol",[t._m(10),t._v(" "),t._m(11),t._v(" "),t._m(12),t._v(" "),n("li",[t._v("事件发射器实现简单的发布/订阅模式")]),t._v(" "),n("li",[n("a",{attrs:{href:"https://codepen.io/501981732/pen/pGNpVx",target:"_blank",rel:"noopener noreferrer"}},[t._v("扩展事件监听器：实现一个文件监听器"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("a",{attrs:{href:"https://codepen.io/501981732/pen/KJNZqe",target:"_blank",rel:"noopener noreferrer"}},[t._v("events模块实现发布/订阅模式"),n("OutboundLink")],1)])]),t._v(" "),t._m(13),t._v(" "),t._m(14),t._v(" "),t._m(15),t._m(16),t._v(" "),t._m(17),t._m(18),t._v(" "),t._m(19),t._v(" "),t._m(20),t._v(" "),t._m(21),t._v(" "),t._m(22),t._v(" "),t._m(23),t._v(" "),n("p",[t._v("Gulp是基于流的构建系统，我们可以通过对这些流的引导来创建构建过程。")]),t._v(" "),n("p",[t._v("gulp实现高度复用归功于：1.插件 2. 自定义构建任务")]),t._v(" "),t._m(24),n("p",[t._v("在gulp中用js表示构建阶段很容易。我们可以用gulp.task()往这个文件添加自己任务。这些任务通常有相同模式。（sourcemaps是特例：需要2次pipe 一个配置 一次输出）")]),t._v(" "),t._m(25),t._v(" "),n("p",[t._v("gulp是一个通用的项目自动化工具，它适合管理项目里的跨平台清理脚本，比如隐形复杂的客户端测试或为数据库提供固定的测试环境。")]),t._v(" "),t._m(26),t._v(" "),n("p",[t._v("用gulp时，写JS代码是为了驱动测试系统，所以或涉及到写gulpfile和构建任务。\nwebpack写的是配置文件，用插件和加载器添加新功能，甚至可以不写配置文件，在命令行中直接输webpack将源文件的目录作为参数，就能构建项目。\nwebpack的优势之一就是 更容易快速搭建出一个支持增量式构建的构建系统。webpack不会因为一个文件发生变化而重新构建整个项目。")]),t._v(" "),t._m(27),t._v(" "),t._m(28),t._v(" "),t._m(29),t._v(" "),t._m(30),t._v(" "),t._m(31),t._v(" "),t._m(32),t._v(" "),t._m(33),t._v(" "),t._m(34),t._v(" "),t._m(35),t._v(" "),t._m(36),t._v(" "),t._m(37),t._m(38),t._v(" "),n("p",[n("a",{attrs:{href:"https://nodejs.org/en/docs/guides/nodejs-docker-webapp/",target:"_blank",rel:"noopener noreferrer"}},[t._v("nodejs-docker-webapp"),n("OutboundLink")],1)]),t._v(" "),n("p",[t._v("Docker允许将程序定义为镜像，在将程序容器化之后，用一条命令就可以带起一个新鲜的实例.")]),t._v(" "),t._m(39)])},[function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"本文是2019年春节期间读-node-js实战-总结部分"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#本文是2019年春节期间读-node-js实战-总结部分","aria-hidden":"true"}},[this._v("#")]),this._v(" 本文是2019年春节期间读<<Node.js实战>> 总结部分")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"第一部分"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第一部分","aria-hidden":"true"}},[this._v("#")]),this._v(" 第一部分")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"第一章"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第一章","aria-hidden":"true"}},[this._v("#")]),this._v(" 第一章")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("知识点")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ol",[n("li",[n("p",[t._v("Node.js是js的一个运行平台")]),t._v(" "),n("p",[t._v("特征：异步与事件驱动机制以及小巧精悍的标准库。\n优势：单线程编程模型")])]),t._v(" "),n("li",[n("p",[t._v("我们希望在读取文件或通过网络发送消息时，运行平台不阻塞业务逻辑的执行：事件 异步API 非阻塞I/O")])]),t._v(" "),n("li",[n("p",[t._v("node用libuv库提供快速 跨平台非阻塞I/O的本地库")])]),t._v(" "),n("li",[n("p",[t._v("事件轮询是单向的先入先出队列")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("ES6 NODE V8")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("1.当你考虑用const或let时，几乎都可以用let, 你的大部分代码都是用你自己的类实例，对象常量或不会变的值， const的引用是只读的，并非值只读\n2. V8一个值得称道的特性：他会被JS直接便以为机器码，另外他有一些代码优化特性，所以NODE才特别快\n3. node软件栈图：\n本地部件libuv负责I/O\nV8负责js代码解释和执行\n用C++绑定层可将libuv和V8结合起来\n4. ES2015特性分为 shipping,staged,in progress\nshipping默认开启,\n"),s("strong",[this._v("node -- harmory")]),this._v('开启staged,\nnode --v8-options | grep "in progress"\n5.  调试器\n'),s("strong",[this._v("node debugger app.js")]),this._v(" 输入命令c 继续\n"),s("strong",[this._v("node --inspect --debug-brk")]),this._v(" chrome交互式调试  node支持chrome调试协议")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ol",{attrs:{start:"6"}},[n("li",[t._v("node可以做什么：3大类\n"),n("ol",[n("li",[t._v("WEB应用程序\n"),n("ul",[n("li",[t._v("提供单页面应用的简单程序")]),t._v(" "),n("li",[t._v("REST微服务")]),t._v(" "),n("li",[t._v("全栈WEB应用")])])]),t._v(" "),n("li",[t._v("命令行工具")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("cli.js\nconst [nodePath,scriptPath,name] = process.argv\nconsole.log(hello,name)\n\nnode cli.js wangmeng \n输出 hello wangmeng\n#！\n")])])]),n("ol",{attrs:{start:"3"}},[n("li",[t._v("后台程序、桌面应用 Electron")]),t._v(" "),n("li",[t._v("其他语言无法做到的：同构 因为node是基于js，复杂客服端应用可以经过改造在NODE服务器上运行，让服务器预渲染，加快页面在浏览器的渲染速度，也有利于搜索引擎进行索引")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"第二章node编程基础"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第二章node编程基础","aria-hidden":"true"}},[this._v("#")]),this._v(" 第二章node编程基础")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("1.模块 2.事件发射器实现简单的发布/订阅模式 3.扩展事件监听器：文件监听器 4.流程控制：串行并行")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[s("strong",[this._v("Node查找文件顺序")]),this._v("： 核心模块-> 当前目录 -> node_modules")])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[s("strong",[this._v("require是Node少数几个同步I/O操作")]),this._v("。 在I/O密集的地方尽量不要require,在运行一个HTTP服务器，每个请求都require会遇到性能问题，require和其他几个操作通常都放在程序最初加载的地方。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("li",[n("strong",[t._v("模块最终导出的是什么：")]),t._v(" "),n("ul",[n("li",[t._v("最终导出的是module.exports exports只是对module.exports的一个全局引用，一个可以添加属性的空方法。")]),t._v(" "),n("li",[t._v("假如exports = xxx 这样设定为别的，就打破了module.exports 和exports的"),n("strong",[t._v("引用关系")]),t._v(" 那么就不再指向nodule.exports了，but可以这样让module.exports再次应用exports")]),t._v(" "),n("li",[t._v("module.exports = exports = xxx")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"第三章-node-web-程序是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第三章-node-web-程序是什么","aria-hidden":"true"}},[this._v("#")]),this._v(" 第三章 Node Web 程序是什么")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",[s("li",[this._v("一般node web结构")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("package.json\npublic/ 静态资源文件 css js\napp.js or index.js 设置程序代码\nmodels/ 数据库模型\nviews/ 用来与页面的模板\ncontrollers/ or routers/ http请求处理\nmiddleware/ 中间件组件\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",{attrs:{start:"2"}},[s("li",[this._v("请求可以用curl命令")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v('curl http:localhost:3001/artiles\ncurl -x DELETE http:localhost:3001/artiles/1\ncurl --data "title=xxx" http:localhost:3001/artiles/1   post 请求\n')])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",{attrs:{start:"3"}},[s("li",[this._v("sqlite3进程内的管理器，不需要安装一个后台运行的数据库")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("实战代码")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"第四章-前端构建工具"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第四章-前端构建工具","aria-hidden":"true"}},[this._v("#")]),this._v(" 第四章 前端构建工具")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"配置前端构建方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置前端构建方法","aria-hidden":"true"}},[this._v("#")]),this._v(" 配置前端构建方法")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("指定命令行参数 ./node_modules/.bin uglify --source-map")]),t._v(" "),n("li",[t._v("针对项目创建配置文件 .babelrc .eslint.rc等")]),t._v(" "),n("li",[t._v("将配置参数放到package.json 里面 browerslist  babel等")]),t._v(" "),n("li",[t._v("构建复杂则可以创建shell命令 用npm 调用")]),t._v(" "),n("li",[t._v("gulp webpack等")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"gulp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gulp","aria-hidden":"true"}},[this._v("#")]),this._v(" gulp")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("gulp.task('default', () => {\n  return gulp.src('app/*.jsx')\n    .pipe(sourcemaps.init())\n    .pipe(babel({\n      presets: ['es2015', 'react']\n    }))\n    .pipe(concat('all.js'))\n    .pipe(sourcemaps.write('.'))\n    .pipe(gulp.dest('dist'));\n});\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",[s("li",[this._v("源文件  -- 收集输入文件")]),this._v(" "),s("li",[this._v("转译   -- 让他们一次通过一个个对他们进行转译的插件。")]),this._v(" "),s("li",[this._v("合并   -- 把这些文件合到一起，创建一个整体构建文件。")]),this._v(" "),s("li",[this._v("输出   -- 设定文件的目标地址或者移动输出文件。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"webpack"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#webpack","aria-hidden":"true"}},[this._v("#")]),this._v(" webpack")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"第十章-node程序的部署以及运维"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第十章-node程序的部署以及运维","aria-hidden":"true"}},[this._v("#")]),this._v(" 第十章 Node程序的部署以及运维")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("如何向外界开放对程序的访问：1.可以将访问流从80和443端口转发给你的程序。2.也可以在前面部署nginx做代理，同时让他梳理静态文件")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"安置node三种方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安置node三种方式","aria-hidden":"true"}},[this._v("#")]),this._v(" 安置node三种方式")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("平台及服务(PaaS) Amzzon Azure Heoku")]),t._v(" "),n("li",[t._v("服务器或者虚拟主机 阿里云 私有主机（"),n("strong",[t._v("scp")]),t._v(" "),n("strong",[t._v("sftp")]),t._v("等将代码上传或者 "),n("strong",[t._v("git")]),t._v("仓库）")]),t._v(" "),n("li",[t._v("容器 "),n("strong",[t._v("Docker")]),t._v("这样的软件容器运行你的程序和其他相关服务")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"部署基本知识"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#部署基本知识","aria-hidden":"true"}},[this._v("#")]),this._v(" 部署基本知识")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("scp sftp等将代码上传或者git仓库拉取")]),t._v(" "),n("li",[t._v("自动化部署 "),n("strong",[t._v("（Fleet）")])]),t._v(" "),n("li",[t._v("保证node不掉线 "),n("strong",[t._v("Forever")]),t._v(" "),n("ul",[n("li",[t._v("断开SSH后不会退出")]),t._v(" "),n("li",[t._v("如果崩溃 Forever会自动重启")]),t._v(" "),n("li",[t._v("-w 在源码发生变化时自动重启程序")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"在线时长和性能最大化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在线时长和性能最大化","aria-hidden":"true"}},[this._v("#")]),this._v(" 在线时长和性能最大化")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("1.我们希望保证程序在线，在服务器启动时启动，关闭时关闭，崩溃时重启\n2. 我们希望吧所有的CPU内核都用上，在高容量生产站点上避免用node提供静态文件，node擅长交互式程序，静态文件 1.交给 "),s("strong",[this._v("nginx")]),this._v("来处理静态文件，或者 2.将静态文件放到"),s("strong",[this._v("CDN")]),this._v("，然后再程序中指向它")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[n("strong",[t._v("upStart")]),t._v("保证程序在线，在服务器启动时启动，关闭时关闭，崩溃时重启")]),t._v(" "),n("li",[t._v("用Node的 "),n("strong",[t._v("集群API")]),t._v("，充分利用多核处理器的处理能力")]),t._v(" "),n("li",[t._v("弄Nginx提供Node程序中的静态文件")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"node集群api的例子"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#node集群api的例子","aria-hidden":"true"}},[this._v("#")]),this._v(" node集群API的例子")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" cluster "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("require")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'cluster'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" http "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("require")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'http'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" numCPUs "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("require")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'os'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("cpus")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" workers "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" requests "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("0")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cluster"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isMaster"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("0")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" numCPUs"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{attrs:{class:"token operator"}},[t._v("++")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    workers"),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" cluster"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("fork")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      workers"),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("on")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'message'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("message"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{attrs:{class:"token comment"}},[t._v("//监听来自工作进程的消息")]),t._v("\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("message"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cmd "),n("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'incrementRequestTotal'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          requests"),n("span",{attrs:{class:"token operator"}},[t._v("++")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("//增加总请求数")]),t._v("\n          "),n("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" j "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("0")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j "),n("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" numCPUs"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j"),n("span",{attrs:{class:"token operator"}},[t._v("++")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            workers"),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("send")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("                "),n("span",{attrs:{class:"token comment"}},[t._v("//将新的总请求数发给所有工作进程")]),t._v("\n              cmd"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'updateOfRequestTotal'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n              requests"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" requests\n            "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n          "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("//用闭包保存当前工作进程的索引")]),t._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  cluster"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("on")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'exit'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("worker"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" code"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" signal"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("log")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'Worker %s died.'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" worker"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("process"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pid"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  process"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("on")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'message'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("message"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  "),n("span",{attrs:{class:"token comment"}},[t._v("//监听来自主进程的消息")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("message"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cmd "),n("span",{attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'updateOfRequestTotal'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      requests "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" message"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("requests"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("     "),n("span",{attrs:{class:"token comment"}},[t._v("//根据主进程的消息来更新请求数")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  http"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Server")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("req"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    res"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("writeHead")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("200")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    res"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("end")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token template-string"}},[n("span",{attrs:{class:"token string"}},[t._v("`Worker ")]),n("span",{attrs:{class:"token interpolation"}},[n("span",{attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("process"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pid"),n("span",{attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),n("span",{attrs:{class:"token string"}},[t._v(": ")]),n("span",{attrs:{class:"token interpolation"}},[n("span",{attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("requests"),n("span",{attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),n("span",{attrs:{class:"token string"}},[t._v(" requests.`")])]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    process"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("send")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" cmd"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'incrementRequestTotal'")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{attrs:{class:"token comment"}},[t._v("//让主进程知道该增加请求数了")]),t._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("listen")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("8000")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"容器-可以看作是将程序的部署自动化的os虚拟技术"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#容器-可以看作是将程序的部署自动化的os虚拟技术","aria-hidden":"true"}},[this._v("#")]),this._v(" 容器 可以看作是将程序的部署自动化的OS虚拟技术")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("安装Docker")]),this._v(" "),s("li",[this._v("创建一个node程序")]),this._v(" "),s("li",[this._v("在项目中添加 Dockerfile文件\n"),s("ul",[s("li",[this._v("Dockerfile会告诉docker如何创建Docker的奖项，以及如何安装这个程序并运行它，")])])])])}],!1,null,null,null);e.options.__file="<<Node.js实战>>.md";s.default=e.exports}}]);