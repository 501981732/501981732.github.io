(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{265:function(n,t,e){"use strict";e.r(t);var l=e(0),a=Object(l.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("div",{staticClass:"content"},[e("h2",{attrs:{id:"gpu加速原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#gpu加速原理","aria-hidden":"true"}},[n._v("#")]),n._v(" GPU加速原理")]),n._v(" "),e("blockquote",[e("p",[n._v("网页的渲染过程")])]),n._v(" "),e("pre",[e("code",[n._v("1. 获取dom 分割成多个层\n2. 对每个图层的节点计算样式结果 （Recalculate style）\n3. 为每个节点生成图形和位置 layout \n4. 将每个节点绘制并填充到图形的位置中 paint \n5. 图层作为纹理上传到GPU\n6. 符合条件的多图层生成屏幕的图像  Composite layer 合成层\n7.浏览器渲染过程 layout -> paint -> composite layer （触发的阶段越高，代价越高）\n\n独立的层 --\x3e重排重绘 不会影响父层\n")])]),n._v(" "),e("blockquote",[e("p",[n._v("哪些些会生成独立的层")])]),n._v(" "),e("pre",[e("code",[n._v("1. 根元素 position transform 半透明 canvas video overflow 滤镜...\n")])]),n._v(" "),e("blockquote",[e("p",[n._v("哪些属性可以开启GPU加速")])]),n._v(" "),e("pre",[e("code",[n._v(" - 虽然生成独立的层，但是还是cpu一直在计算重绘重排，再传到GPU 进行合成\n- 开启GPU加速后 就省去CPU重排重绘的过程 GPU(图形处理器)擅长图形处理   (gpu.js)\n- css3d video webgl transfrom css滤镜 flash z-index大于某个相邻节点的layer元素... \n")])]),n._v(" "),e("blockquote",[e("p",[n._v("硬件加速（GPU加速）")])]),n._v(" "),e("pre",[e("code",[n._v("- 术语：Texture 即CPU传到GPU的一个Bitmap\n- GPU 能对 快速对Texture 进行 偏移 旋转，缩放，修改透明度等\n- 节约了 \n    1. CPU进行layout paint 的时间 \n    2. CPU上传位图的时间\n")])]),n._v(" "),e("blockquote",[e("p",[n._v("CPU VS GPU")])]),n._v(" "),e("pre",[e("code",[n._v("- 相同：都有总线与外界联系，有自己的缓存体系，以及数字与逻辑运算单元，两者都是为了完成计算任务而设计的\n- 不同：CPU 主要处理操作系统和应用程序 GPU主要处理跟显示相关的数据处理， GPU的活一般CPU都能干，但是效率低\n")])]),n._v(" "),e("blockquote",[e("p",[n._v("layer模型")])]),n._v(" "),e("pre",[e("code",[n._v("- 浏览器根据css属性生成layer\n- 将layer作为Texture上传GPU\n- 当改变layer的transfrom opacity 等属性，渲染会跳过 layout paint 直接通知GPU做出改变\n")])]),n._v(" "),e("ol",{attrs:{start:"10"}},[e("li",[e("p",[n._v("重绘")]),n._v(" "),e("ul",[e("li",[n._v("border-raduis box-shadow color ...")])])]),n._v(" "),e("li",[e("p",[n._v("重排")]),n._v(" "),e("ul",[e("li",[n._v("跳过优化（浏览器对重排有一定的优化，合并多次重排）读取 offsetTop scrollTop width clientWidth getComputedStyle() getBoundingClientRect()")]),n._v(" "),e("li",[n._v("删除位置 大小 盒子")]),n._v(" "),e("li",[n._v("读写分离   "),e("strong",[n._v("fastdom.js")])])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("var h = document.getElementById('h').clientHeight\n//写操作放到下一帧 （假如下一针有大量的操作，requestAnimationFrame会自动调整帧数从60FPS降到30FPS，不会导致丢帧）\n    requestAnimationFrame(function(){\n        xxx.style.height = h*2\n    })\n")])])]),e("ul",[e("li",[n._v("display:none -> block 重绘重排  visibility:visible -> hidden")])])]),n._v(" "),e("li",[e("p",[n._v("直出")]),n._v(" "),e("ul",[e("li",[n._v("SPA单页面：访问html文件 -> 初始化路由 -> 找到对应跟路由 -> 找到对应组件 ->发请求 发给后端再渲染   导致"),e("strong",[n._v("白屏")])]),n._v(" "),e("li",[e("strong",[n._v("SSR + SPA")]),n._v(" 用户访问到网站直接吐html")]),n._v(" "),e("li",[n._v("多页转单页 "),e("strong",[n._v("pushstate技术")]),n._v(" a/b ->c/d 检测到路由变化向后台发请求  如果header是ajax 就是单页，不是render")])])])]),n._v(" "),e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[n._v("TIP")]),n._v(" "),e("p",[n._v("请打开chrome工具对比 preference timeingline")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('对比 preference timeingline\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <title>Document</title>\n</head>\n<style>\n    .container {\n        position: relative;\n    }\n    #ball,#ball2 {\n        position: absolute;\n        border-radius: 50%;\n        box-shadow: 0 0 5px 0 red;\n        width: 100px;\n        height: 100px;\n    }\n    #ball2 {\n        box-shadow: 0 0 5px 0 gray;\n    }\n    .run {\n        animation: running-circle 3s infinite;\n    }\n    .run2 {\n        animation: running-circle2 3s infinite;\n    }\n    @keyframes running-circle {\n        0% {\n            top: 0;\n            left: 0;\n        }\n        25% {\n            top: 0px;\n            left: 200px;\n        }\n        50% {\n            top: 200px;\n            left: 200px;\n        }\n        75% {\n            top: 200px;\n            left: 0px;\n        }\n        100% {\n            top: 0px;\n            left: 0px;\n        }\n    }\n    @keyframes running-circle2 {\n        0% {\n            transform: translate(0,0)\n        }\n        25% {\n            transform: translate(0,200px)\n        }\n        50% {\n            transform: translate(200px,200px)\n        }\n        75% {\n            transform: translate(200px,0)\n        }\n        100% {\n            transform: translate(0,0)\n\n        }\n    }\n</style>\n<body>\n    <div class="container">\n        <div id="ball"></div>\n        <div id="ball2"></div>\n    </div>\n    <script>\n        let ball = document.getElementById(\'ball\')\n        ball.classList.add(\'run\')\n        let ball2 = document.getElementById(\'ball2\')\n        ball2.classList.add(\'run2\')\n    <\/script>\n</body>\n</html>\n')])])]),e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[n._v("TIP")]),n._v(" "),e("p",[n._v("ball分析")])]),n._v(" "),e("p",[e("img",{attrs:{src:"/img/ball.gif",alt:"ball"}})]),n._v(" "),e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[n._v("TIP")]),n._v(" "),e("p",[n._v("ball2分析")])]),n._v(" "),e("p",[e("img",{attrs:{src:"/img/ball2.gif",alt:"ball"}})])])}],!1,null,null,null);a.options.__file="GPU加速原理.md";t.default=a.exports}}]);