(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{218:function(e,t,n){"use strict";n.r(t);var s=n(0),r=Object(s.a)({},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"content"},[e._m(0),e._v(" "),e._m(1),e._v(" "),e._m(2),e._v(" "),n("p",[n("a",{attrs:{href:"https://cnodejs.org/topic/5231a630101e574521e45ef8",target:"_blank",rel:"noopener noreferrer"}},[e._v("接下来看下cnode的精华帖"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("js基础：")]),e._v(" "),e._m(3),e._m(4)])},[function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("首先看我们"),t("strong",[this._v("Node.js实战第二章")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"模块最终导出的是什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#模块最终导出的是什么","aria-hidden":"true"}},[this._v("#")]),this._v(" 模块最终导出的是什么")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ul",[n("li",[e._v("最终导出的是module.exports exports只是对module.exports的一个全局引用，一个可以添加属性的空方法,module.exports 初始值为一个空对象 {}。")]),e._v(" "),n("li",[e._v("假如exports = xxx 这样设定为别的，就打破了module.exports 和exports的"),n("strong",[e._v("引用关系")]),e._v(" 那么就不再指向nodule.exports了，but可以这样让module.exports再次引用exports")]),e._v(" "),n("li",[e._v("module.exports = exports = xxx")]),e._v(" "),n("li",[e._v("require() 返回的是 module.exports 而不是 exports")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("var a = {name: 1};\nvar b = a;\n\nconsole.log(a);\nconsole.log(b);\n\nb.name = 2;\nconsole.log(a);\nconsole.log(b);\n\nvar b = {name: 3};\nconsole.log(a);\nconsole.log(b);\n\n运行 test.js 结果为：\n\n{ name: 1 }\n{ name: 1 }\n{ name: 2 }\n{ name: 2 }\n{ name: 2 }\n{ name: 3 }\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("解释：")]),this._v(" a 是一个对象，b 是对 a 的引用，即 a 和 b 指向同一块内存，所以前两个输出一样。当对 b 作修改时，即 a 和 b 指向同一块内存地址的内容发生了改变，所以 a 也会体现出来，所以第三四个输出一样。当 b 被覆盖时，b 指向了一块新的内存，a 还是指向原来的内存，所以最后两个输出不一样。")])}],!1,null,null,null);r.options.__file="exports和module.exports区别.md";t.default=r.exports}}]);