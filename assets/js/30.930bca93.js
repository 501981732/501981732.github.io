(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{223:function(e,n,t){"use strict";t.r(n);var a=t(0),c=Object(a.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",{staticClass:"content"},[t("h2",{attrs:{id:"理解v-model"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#理解v-model","aria-hidden":"true"}},[e._v("#")]),e._v(" 理解v-model")]),e._v(" "),t("div",{staticClass:"tip custom-block"},[t("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),t("p",[e._v("v-model一般作为表单里面做双向数据绑定，but其实是个语法糖。通过下面几个例子理解下。")])]),e._v(" "),t("h3",{attrs:{id:"_1-元素的v-model-输入框-text"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-元素的v-model-输入框-text","aria-hidden":"true"}},[e._v("#")]),e._v(" 1. 元素的v-model 输入框(text)")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('\n<!DOCTYPE html>\n    <html lang="en">\n    <head>\n        <meta charset="UTF-8">\n        <title>v-model指令</title>\n        <script src="https://cdn.bootcss.com/vue/2.3.4/vue.js"><\/script>\n    </head>\n    <body>\n        <div id="app">\n            {{price}}<br>\n            <input v-model="price">\x3c!-- 下行注释的语法糖 --\x3e\n            \x3c!-- <input :value="price" @input="price = $event.target.value"> --\x3e\n        </div>\n        <script>\n            new Vue({\n                el: \'#app\',\n                data: {\n                    price: \'20\'\n                }\n            });\n        <\/script>\n    </body>\n</html>\n')])])]),t("h3",{attrs:{id:"_2-组件v-model-输入框-text"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-组件v-model-输入框-text","aria-hidden":"true"}},[e._v("#")]),e._v(" 2. 组件v-model 输入框(text)")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('<!DOCTYPE html>\n    <html lang="en">\n    <head>\n        <meta charset="UTF-8">\n        <title>v-model指令</title>\n        <script src="https://cdn.bootcss.com/vue/2.3.4/vue.js"><\/script>\n    </head>\n    <body>\n        <div id="app">\n            {{price}}\n            <my-input v-model="price"></my-input>\x3c!-- 下行注释的语法糖 --\x3e\n            \x3c!-- <my-input :value="price" @input="val => {price = val}"></my-input> --\x3e\n        </div>\n        <script>\n            Vue.component(\'my-input\', {\n                template: \'<div><input type="text" ref="input" :value="value" @input="doThis"/></div>\',\n                props: {\n                    value: String\n                },\n                methods: {\n                    doThis() {\n                        this.$emit(\'input\', this.$refs.input.value);\n                    }\n                }\n            });\n            new Vue({\n                el: \'#app\',\n                data: {\n                    price: \'10\'\n                }\n            });\n        <\/script>\n    </body>\n</html>\n')])])]),t("h3",{attrs:{id:"_3-组件v-model-复选框-checkbox"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-组件v-model-复选框-checkbox","aria-hidden":"true"}},[e._v("#")]),e._v(" 3. 组件v-model 复选框(checkbox)")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(' <!DOCTYPE html>\n        <html lang="en">\n        <head>\n            <meta charset="UTF-8">\n            <title>v-model指令</title>\n            <script src="https://cdn.bootcss.com/vue/2.3.4/vue.js"><\/script>\n        </head>\n        <body>\n            <div id="app2">\n                {{fruit}}\x3c!-- 观测数据变化 --\x3e\n                <my-checkbox v-model="fruit.apple" value="apple"></my-checkbox>\x3c!-- 下行注释的语法糖 --\x3e\n                \x3c!-- <my-checkbox :checked="fruit.apple" @change="val => {fruit.apple = val}" value="apple"></my-checkbox> --\x3e\n            \n                <my-checkbox v-model="fruit.peach" value="peach"></my-checkbox>\x3c!-- 下行注释的语法糖 --\x3e\n                \x3c!-- <my-checkbox :checked="fruit.peach" @change="val => {fruit.peach = val}" value="peach"></my-checkbox> --\x3e\n            </div>\n            <script>\n                Vue.component(\'my-checkbox\', {\n                    template: \'<div><span>{{value}}</span><input type="checkbox" :checked="checked" @change="doThis" :value="value"/></div>\',\n                    model: {\n                        prop: \'checked\',\n                        event: \'change\'\n                    },\n                    props: {\n                        checked: Boolean,\n                        value: String\n                    },\n                    methods: {\n                        doThis() {\n                            this.$emit(\'change\', !this.checked);\n                        }\n                    }\n                });\n                new Vue({\n                    el: \'#app2\',\n                    data: {\n                        fruit: {//数据\n                            apple: true,\n                            peach: false\n                        }\n                    }\n                });\n            <\/script>\n        </body>\n    </html>\n')])])]),t("h3",{attrs:{id:"_4-组件v-model-单选框-radio"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-组件v-model-单选框-radio","aria-hidden":"true"}},[e._v("#")]),e._v(" 4. 组件v-model 单选框(radio)")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <title>v-model指令</title>\n    <script src="https://cdn.bootcss.com/vue/2.3.4/vue.js"><\/script>\n</head>\n<body>\n    <div id="app">\n        {{fruit}}\x3c!-- 观测数据变化 --\x3e\n        <my-radio v-model="fruit" value="apple" name="myFruit"></my-radio>\x3c!-- 下行注释的语法糖 --\x3e\n        \x3c!-- <my-radio :checked="fruit" @change="val => {fruit = val}" value="apple"></my-radio> --\x3e\n        \n        <my-radio v-model="fruit" value="peach" name="myFruit"></my-radio>\x3c!-- 下行注释的语法糖 --\x3e\n        \x3c!-- <my-radio :checked="fruit" @change="val => {fruit = val}" value="peach"></my-radio> --\x3e\n    </div>\n    <script>\n        Vue.component(\'my-radio\', {\n            template: \'<div><span>{{value}}</span><input :name="name" type="radio" ref="radio" :checked="checked===value" @change="doThis" :value="value"/></div>\',\n            model: {\n                prop: \'checked\',\n                event: \'change\'\n            },\n            props: {\n                checked: String,\n                value: String,\n                name: String\n            },\n            methods: {\n                doThis() {\n                    this.$emit(\'change\', this.$refs.radio.value);\n                }\n            }\n        });\n        new Vue({\n            el: \'#app\',\n            data: {\n                fruit: \'peach\'//数据\n            }\n        });\n    <\/script>\n</body>\n')])])])])}],!1,null,null,null);c.options.__file="v-model指令.md";n.default=c.exports}}]);