(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{199:function(t,e,s){"use strict";s.r(e);var r=s(0),a=Object(r.a)({},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),s("p",[t._v("持久型也就是攻击的代码被服务端写入进数据库中，这种攻击危害性很大，因为如果网站访问量很大的话，就会导致大量正常访问页面的用户都受到攻击.")]),t._v(" "),s("p",[t._v("举个例子，对于评论功能来说，就得防范持久型 XSS 攻击")]),t._v(" "),t._m(3),s("p",[t._v("非持久型 一般通过修改URL参数的方式加入攻击代码，有道用户访问链接，我们从url中获取某些参数不经过过滤导致攻击代码被执行")]),t._v(" "),t._m(4),t._m(5),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),t._m(8),t._m(9),t._v(" "),t._m(10),t._m(11),t._v(" "),s("p",[t._v("开启方式：\n"),s("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy",target:"_blank",rel:"noopener noreferrer"}},[t._v("MDN"),s("OutboundLink")],1)]),t._v(" "),t._m(12),t._v(" "),t._m(13),t._m(14),t._v(" "),s("p",[t._v("跨站请求伪造。原理就是攻击者构造出一个后端请求地址，诱导用户点击或者通过某些途径自动发起请求。如果用户是在登录状态下的话，后端就以为是用户在操作，从而进行相应的逻辑。")]),t._v(" "),s("p",[t._v("比如：网站中有一个通过 GET 请求提交用户评论的接口，那么攻击者就可以在钓鱼网站中加入一个图片，图片的地址就是评论接口")]),t._v(" "),t._m(15),t._v(" "),t._m(16),t._v(" "),t._m(17),t._v(" "),s("p",[t._v("Cookie 设置 SameSite 属性。该属性表示 Cookie 不随着跨域请求发送")]),t._v(" "),t._m(18),t._v(" "),s("p",[t._v("通过验证 Referer 来判断该请求是否为第三方网站发起的")]),t._v(" "),t._m(19),t._v(" "),s("p",[t._v("服务器下发一个随机 Token，每次发起请求时将 Token 携带上，服务器验证 Token 是否有效。")]),t._v(" "),t._m(20),t._v(" "),s("p",[t._v("视觉欺骗的攻击手段。攻击者将需要攻击的网站通过 iframe 嵌套的方式嵌入自己的网页中，并将 iframe 设置为透明，在页面中透出一个按钮诱导用户点击")]),t._v(" "),t._m(21),t._v(" "),t._m(22),t._v(" "),t._m(23),t._v(" "),s("p",[t._v("2.js防御")]),t._v(" "),s("p",[t._v("当通过iframe的方式加载页面时，攻击者的网页就不显示所有内容")]),t._v(" "),t._m(24),t._m(25),t._v(" "),s("p",[t._v("中间人攻击是攻击方同时与服务端和客户端建立起了连接，并让对方认为连接是安全的，但是实际上整个通信过程都被攻击者控制了。攻击者不仅能获得双方的通信信息，还能修改通信信息")]),t._v(" "),t._m(26),t._v(" "),s("p",[t._v("只需要增加一个安全通道来传输信息。HTTPS 就可以用来防御中间人攻击，但是并不是说使用了 HTTPS 就可以高枕无忧了，因为如果你没有完全关闭 HTTP 访问的话，攻击方可以通过某些方式将 HTTPS 降级为 HTTP 从而实现中间人攻击")])])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"xss"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#xss","aria-hidden":"true"}},[this._v("#")]),this._v(" XSS")])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("就是攻击者想尽一切办法将可以执行的代码注入到网页中。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"持久型和非持久型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#持久型和非持久型","aria-hidden":"true"}},[this._v("#")]),this._v(" 持久型和非持久型")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("<script>alert(’王猛最帅‘)<\/script>\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("\x3c!-- http://www.domain.com?name=<script>alert(1)<\/script> --\x3e\n<div>{{name}}</div>  \n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"防御手段"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#防御手段","aria-hidden":"true"}},[this._v("#")]),this._v(" 防御手段")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",[e("li",[this._v("转义字符")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("对于用户的输入应该是永远不信任的。最普遍的做法就是转义输入输出的内容，对于引号、尖括号、斜杠进行转义.")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("function escape(str) {\n  str = str.replace(/&/g, '&amp;')\n  str = str.replace(/</g, '&lt;')\n  str = str.replace(/>/g, '&gt;')\n  str = str.replace(/\"/g, '&quto;')\n  str = str.replace(/'/g, '&#39;')\n  str = str.replace(/`/g, '&#96;')\n  str = str.replace(/\\//g, '&#x2F;')\n  return str\n}\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("对于富文本不能转义所有字符，通常采用白名单过滤的办法")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('const xss = require(\'xss\')\nlet html = xss(\'<h1 id="title">XSS Demo</h1><script>alert("xss");<\/script>\')\n// -> <h1>XSS Demo</h1>&lt;script&gt;alert("xss");&lt;/script&gt;\nconsole.log(html)\n')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",{attrs:{start:"2"}},[e("li",[this._v("CSP 本质上就是建立白名单，开发者明确告诉浏览器哪些外部资源可以加载和执行。我们只需要配置规则，如何拦截是由浏览器自己实现的。我们可以通过这种方式来尽量减少 XSS 攻击")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",[e("li",[this._v("设置 HTTP Header 中的 "),e("code",[this._v("Content-Security-Policy")])]),this._v(" "),e("li",[this._v("设置 meta 标签的方式 "),e("code",[this._v('<meta http-equiv="Content-Security-Policy">')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("只允许加载本站资源\nContent-Security-Policy: default-src ‘self’\n只允许加载 HTTPS 协议图片\nContent-Security-Policy: img-src https://*\n允许加载任何来源框架\nContent-Security-Policy: child-src 'none'\n\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"csrf"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#csrf","aria-hidden":"true"}},[this._v("#")]),this._v(" CSRF")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"防御手段-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#防御手段-2","aria-hidden":"true"}},[this._v("#")]),this._v(" 防御手段")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",[e("li",[this._v("Get 请求不对数据进行修改")]),this._v(" "),e("li",[this._v("不让第三方网站访问到用户 Cookie")]),this._v(" "),e("li",[this._v("阻止第三方网站请求接口")]),this._v(" "),e("li",[this._v("请求时附带验证信息，比如验证码或者 Token")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{attrs:{id:"samesite"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#samesite","aria-hidden":"true"}},[this._v("#")]),this._v(" SameSite")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{attrs:{id:"验证-referer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#验证-referer","aria-hidden":"true"}},[this._v("#")]),this._v(" 验证 Referer")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"token"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#token","aria-hidden":"true"}},[this._v("#")]),this._v(" Token")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"点击劫持"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#点击劫持","aria-hidden":"true"}},[this._v("#")]),this._v(" 点击劫持")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"防御手段-3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#防御手段-3","aria-hidden":"true"}},[this._v("#")]),this._v(" 防御手段")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",[e("li",[this._v("X-FRAME-OPTIONS 防御用 iframe 嵌套的点击劫持攻击")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("DENY，表示页面不允许通过 iframe 的方式展示")]),this._v(" "),e("li",[this._v("SAMEORIGIN，表示页面可以在相同域名下通过 iframe 的方式展示")]),this._v(" "),e("li",[this._v("ALLOW-FROM，表示页面可以在指定来源的 iframe 中展示")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("<head>\n  <style id=\"click-jack\">\n    html {\n      display: none !important;\n    }\n  </style>\n</head>\n<body>\n  <script>\n    if (self == top) {\n      var style = document.getElementById('click-jack')\n      document.body.removeChild(style)\n    } else {\n      top.location = self.location\n    }\n  <\/script>\n</body>\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"中间人攻击"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#中间人攻击","aria-hidden":"true"}},[this._v("#")]),this._v(" 中间人攻击")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"防御手段-4"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#防御手段-4","aria-hidden":"true"}},[this._v("#")]),this._v(" 防御手段")])}],!1,null,null,null);a.options.__file="前端安全.md";e.default=a.exports}}]);