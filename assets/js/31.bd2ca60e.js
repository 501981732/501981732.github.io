(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{222:function(t,e,n){"use strict";n.r(e);var s=n(0),a=Object(s.a)({},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"content"},[t._m(0),t._v(" "),n("p",[t._v("用过vue的童靴对vue组件肯定都很熟悉，一般我们在开发中会根据具体情况来封装一些可复用的组件。想loading alert等等。我们会在页面中引入，并通过components注册来实现复用。通过props传值和$emit自定义事件来完成数据传递。")]),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),n("p",[t._v("Vue.use 会自动阻止多次注册相同插件，届时只会注册一次该插件。")]),t._v(" "),t._m(7),t._v(" "),n("p",[t._v("首先插件应该有一个公开方法 install。这个方法的第一个参数是 Vue 构造器，第二个参数是一个可选的选项对象")]),t._v(" "),t._m(8),n("p",[t._v(":::info\n社区里公认的做法是：添加在Vue prototype里的任何属性都要以美元符$作为其前缀\n:::")]),t._v(" "),t._m(9),t._v(" "),n("p",[t._v("最简单的toast插件")]),t._v(" "),t._m(10),t._m(11),t._v(" "),t._m(12),t._m(13),t._v(" "),t._m(14),t._m(15),t._m(16),t._v(" "),t._m(17),t._m(18),t._v(" "),t._m(19),t._m(20),t._v(" "),t._m(21),t._m(22),t._v(" "),t._m(23),t._m(24),t._v(" "),n("p",[t._v("对于那些没有在应用中使用模块化系统的用户，他们往往将通过script标签引用你的插件，并期待插件无需调用Vue.use()便会自动安装 。你可以在插件最后添加如下几行代码来实现自动安装：")]),t._v(" "),t._m(25),t._m(26),t._v(" "),t._m(27),t._m(28),t._v(" "),n("p",[t._v("不多说")]),t._v(" "),t._m(29),n("p",[t._v("说下简单的目录结构")]),t._v(" "),t._m(30),n("p",[t._v("可以向"),n("a",{attrs:{href:"https://github.com/vuejs/awesome-vue",target:"_blank",rel:"noopener noreferrer"}},[t._v("Awesome-Vue"),n("OutboundLink")],1),t._v("提交PR。很多人会来这里寻找插件。or Vue论坛，Vue Gitter Channel，或者在Twitter上@ #vuejs。")])])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"vue组件库开发-vue插件开发"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue组件库开发-vue插件开发","aria-hidden":"true"}},[this._v("#")]),this._v(" vue组件库开发 vue插件开发")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"vue插件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue插件","aria-hidden":"true"}},[this._v("#")]),this._v(" vue插件")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("像一些常用的组件我们想通过全局注册来实现更方便的使用，比如vux elementUI等UI库，既提供了一些组件也提供了一些常用插件。"),e("strong",[this._v("插件可以封装组件，组件可以暴露数据给插件。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"插件分类"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#插件分类","aria-hidden":"true"}},[this._v("#")]),this._v(" 插件分类")])},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ol",[n("li",[n("p",[t._v("添加全局方法或者属性，如: ‘vue-custom-element’")])]),t._v(" "),n("li",[n("p",[t._v("添加全局资源：指令/过滤器/过渡等，如 ‘vue-touch’")])]),t._v(" "),n("li",[n("p",[t._v("通过全局 mixin 方法添加一些组件选项，如: ‘vue-router’")])]),t._v(" "),n("li",[n("p",[t._v("添加 Vue 实例方法，通过把它们添加到 ‘Vue.prototyp’e 上实现。")])]),t._v(" "),n("li",[n("p",[t._v("一个库，提供自己的 API，同时提供上面提到的一个或多个功能，如 ’vue-router‘")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"插件的使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#插件的使用","aria-hidden":"true"}},[this._v("#")]),this._v(" 插件的使用")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("import MyPlugin from 'xxx'\nVue.use(MyPlugin)   or\nVue.use(MyPlugin, { someOption: true })\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"插件的开发"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#插件的开发","aria-hidden":"true"}},[this._v("#")]),this._v(" 插件的开发")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("export default {\n    install(Vue, options) {\n        Vue.myGlobalMethod = function () {  // 1. 添加全局方法或属性，如:  vue-custom-element\n            // 逻辑...\n        }\n        Vue.directive('my-directive', {  // 2. 添加全局资源：指令/过滤器/过渡等，如 vue-touch\n            bind (el, binding, vnode, oldVnode) {\n                // 逻辑...\n            }\n            ...\n        })\n        Vue.mixin({\n            created: function () {  // 3. 通过全局 mixin方法添加一些组件选项，如: vuex\n                // 逻辑...\n            }\n            ...\n        })\n        Vue.prototype.$myMethod = function (options) {  // 4. 添加实例方法，通过把它们添加到 Vue.prototype 上实现\n            // 逻辑...\n        }\n    }\n}\n\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"toast简单插件开发"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#toast简单插件开发","aria-hidden":"true"}},[this._v("#")]),this._v(" toast简单插件开发")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// toast.js\nvar Toast = {};\nToast.install = function (Vue, options) {\n    Vue.prototype.$toast = (tips) => {\n        let toastTpl = Vue.extend({     // 1、创建构造器，定义好提示信息的模板\n            template: '<div class=\"vue-toast\">' + tips + '</div>'\n        });\n        let tpl = new toastTpl().$mount().$el;  // 2、创建实例，挂载到文档以后的地方\n        document.body.appendChild(tpl);     // 3、把创建的实例添加到body中\n        setTimeout(function () {        // 4、延迟2.5秒后移除该提示\n            document.body.removeChild(tpl);\n        }, 2500)\n    }\n}\nmodule.exports = Toast;\n\n//useage\nthis.$toast('haha')\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("增加添加弹出位置")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("var Toast = {};\nToast.install = function (Vue, options) {\n    let opt = {\n        defaultType:'bottom',   // 默认显示位置\n        duration:'2500'         // 持续时间\n    }\n    for(let property in options){\n        opt[property] = options[property];  // 使用 options 的配置\n    }\n    Vue.prototype.$toast = (tips,type) => {\n        if(type){\n            opt.defaultType = type;         // 如果有传type，位置则设为该type\n        }\n        if(document.getElementsByClassName('vue-toast').length){\n            // 如果toast还在，则不再执行\n            return;\n        }\n        let toastTpl = Vue.extend({\n            template: '<div class=\"vue-toast toast-'+opt.defaultType+'\">' + tips + '</div>'\n        });\n        let tpl = new toastTpl().$mount().$el;\n        document.body.appendChild(tpl);\n        setTimeout(function () {\n            document.body.removeChild(tpl);\n        }, opt.duration)\n    }\n    ['bottom', 'center', 'top'].forEach(type => {\n        Vue.prototype.$toast[type] = (tips) => {\n            return Vue.prototype.$toast(tips,type)\n        }\n    })\n}\nmodule.exports = Toast;\n\n\n// useage\nthis.$toast.top('top')\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"alert插件封装组件实例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#alert插件封装组件实例","aria-hidden":"true"}},[this._v("#")]),this._v(" alert插件封装组件实例")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("//alert.vue组件\n<template>\n    <transition name='fade'>\n        <div class=\"alert-box\" v-show='show'>\n            <div class='alert-title'>\n                {{title}}\n            </div>            \n            <div class='alert-subtitle' v-if='subtitle'>\n                {{subtitle}}\n            </div>\n            <div class='alert-body' v-if='body'>\n                {{body}}\n            </div>\n            <slot></slot>\n        <div class=\"close icon\" @click='close'></div>\n        </div>\n    </transition>\n</template>\n<script>\n    \n    export default {\n        name: 'x-alert',\n        components: {},\n        props:{\n            // 父组件v-model='xxx'\n            value: {\n                type: Boolean,\n                default: false\n            },\n            title: {\n                type: String,\n                default:''\n            },\n            subtitle: {\n                type: String,\n                default:''\n            },\n            body: {\n                type: String,\n                default:''\n            }\n        },\n        data() {\n            return {\n                show: this.value\n            }\n        },\n        mounted() {\n\n        },\n        methods: {\n            close() {\n                this.show = false \n                this.$emit('close')\n            }\n        },\n        watch: {\n            value(val) {\n                this.show = val;\n            },\n            show(val) {\n            \x3c!--v-model --\x3e\n                this.$emit('input', val);\n            }\n        },\n        computed: {\n\n        }\n    }\n<\/script>\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("//alert.js插件\nimport Alert from './alert.vue';\n\nconst plugin = {\n\tinstall(vue, props = {}) {\n\t\tconst AlertPlugin = Vue.extend(Alert);\n\n\t\tlet $vm = new AlertPlugin({\n\t\t\tel: document.createElement('div')\n\t\t});\n\t\tdocument.body.appendChild($vm.$el);\n\n\t\tfunction alert(options = {}) {\n\t\t\tif ($vm.show) return;\n\t\t\t// 如果传参为字符串，则直接显示body 的文本\n\t\t\tif (typeof options === 'string') {\n\t\t\t\toptions = {\n\t\t\t\t\tbody: arguments[0]\n\t\t\t\t};\n\t\t\t}\n\t\t\t//配置优选级：实例配置 > 全部配置 > 默认配置\n\t\t\t$vm = Object.assign($vm, props, options,{delayed: true});\n\n\t\t\t$vm.show = true;\n\t\t\t// 支持延时消失 默认支持\n\t\t\tif ($vm.delayed) {\n\t\t\t\tsetTimeout(_=>{\n\t\t\t\t\t$vm.show = false\n\t\t\t\t},3000)\n\t\t\t}\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t$vm.$watch('show', val => {\n\t\t\t\t\tresolve();\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\tif (!vue.$x) {\n\t\t\tvue.$x = {\n\t\t\t\talert\n\t\t\t};\n\t\t} else {\n\t\t\tvue.$x.alert = alert;\n\t\t}\n\t\tvue.mixin({\n\t\t\tcreated: function() {\n\t\t\t\tthis.$x = vue.$x;\n\t\t\t}\n\t\t});\n\t}\n};\nexport default plugin;\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"alert插件用法useage"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#alert插件用法useage","aria-hidden":"true"}},[this._v("#")]),this._v(" alert插件用法useage")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("import AlertPlugin from './alert.js'\nVue.use(AlertPlugin)\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",[e("li")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("this.#x.alert('呵呵') // 字符串的话则只默认显示body部分\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",{attrs:{start:"2"}},[e("li")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("this.$x.alert({\n    title: '你好',\n    subtitle: '我是副标题',\n    body:'呵呵',\n    delayed: false, //取消延时消失\n})\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",{attrs:{start:"3"}},[e("li")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("this.#x.alert('hehe').then(_=> console.log('显隐时触发回调'))\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"自动安装插件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#自动安装插件","aria-hidden":"true"}},[this._v("#")]),this._v(" 自动安装插件")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("\n// 如果Vue是全局对象自动安装插件\nif (typeof window !== 'undefined' && window.Vue) {\n  window.Vue.use(MyPlugin)\n}\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"input高阶组件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#input高阶组件","aria-hidden":"true"}},[this._v("#")]),this._v(" input高阶组件")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('<template>\n    <div class="form-item" clearfix>\n        <i v-if="prefix" class="prefix">{{ prefix }}</i>\n        <input\n            type="text"\n            class="fr"\n            :value="value"\n            v-bind="$attrs"\n            v-on="listeners"\n            v-if="type == \'input\'"\n        />\n        <textarea\n            :placeholder="suffix"\n            class="fr"\n            :value="value"\n            v-bind="$attrs"\n            v-on="listeners"\n            v-else-if="type == \'textarea\'"\n        ></textarea>\n    </div>\n</template>\n<script>\nexport default {\n    name: "",\n    components: {},\n    data() {\n        return {};\n    },\n    props: {\n        prefix: {\n            type: String,\n            default: ""\n        },\n        suffix: {\n            type: String,\n            default: ""\n        },\n        type: {\n            type: String,\n            default: "input"\n        },\n        value: {\n            type: [String, Number],\n            default: ""\n        }\n    },\n    mounted() {},\n    methods: {\n        // inputSomeThing(e) {\n        //     this.$emit("input", e.target.value);\n        // }\n    },\n    watch: {},\n    computed: {\n        listeners() {\n            return {\n                ...this.$listeners,\n                input: e => this.$emit("input", e.target.value)\n            };\n        }\n    }\n};\n<\/script>\n---------\nuseage:\n<c-input\n    v-model="phoneNum"\n    prefix="手机号"\n    maxlength="100"\n    placeholder=\'请输入手机号\'\n></c-input>\n\n')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"npm-发布插件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npm-发布插件","aria-hidden":"true"}},[this._v("#")]),this._v(" npm 发布插件")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("npm login\ncd 目录\nnpm publish\n\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("├── lib // 插件源码\n│   ├── components // 组件目录\n│   │   └── loading.vue // 组件文件\n│   └── index.js  // 插件入口文件\n├── index.js // 入口文件\n└── package.json  // 包管理文件\n\n")])])])}],!1,null,null,null);a.options.__file="vue组件库开发.md";e.default=a.exports}}]);